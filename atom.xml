<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>祎隋</title>
  
  <subtitle>祎隋如你，春风十里不及你</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.degage.xyz/"/>
  <updated>2019-01-16T03:44:02.113Z</updated>
  <id>www.degage.xyz/</id>
  
  <author>
    <name>degage</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计算几何初步</title>
    <link href="www.degage.xyz/2019/01/15/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E5%88%9D%E6%AD%A5/"/>
    <id>www.degage.xyz/2019/01/15/计算几何初步/</id>
    <published>2019-01-15T06:15:14.000Z</published>
    <updated>2019-01-16T03:44:02.113Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span>&#123;</span></span><br><span class="line">  <span class="keyword">double</span> x,<span class="keyword">double</span> y;</span><br><span class="line">  <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> point &amp;a,<span class="keyword">const</span> point &amp;b)&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x&lt;b.x||a.x==b.x&amp;&amp;a.y&lt;b.y;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>利用点积求夹角：$acos(dot(a,b)/len(a)/len(b))$</p><p>叉积：$T=\vec{a} \times \vec{b}=-\vec{b} \times \vec{a} =X_aY_b-X_bY_a=\vline \vec{a} \vline \vline \vec{b} \vline sin(vec{a},vec{b})$</p><p>方向用右手定则判断，垂直平面</p><p>T=0: 两向量共线或反向<br>T&gt;0:b在a左侧<br>T&lt;0:b在a右侧<br><img src="https://i.loli.net/2019/01/15/5c3d307ad09be.png" alt=""></p><p>两向量所构平行四边形面积为叉积</p><p>旋转:<br>向量(x,y)绕坐标原点逆时针旋转$\theta$度<br>（用三垂直定理）</p><script type="math/tex; mode=display">x'=xcos\theta-ysin\theta</script><script type="math/tex; mode=display">y'=xsin\theta+ycos\theta</script><p>tips:<br>在读入时对每个点进行微小扰动<br>point a=(point){x+eps(),y+eps()};<br>或point a=rotate(a,1e-7)<br>以避免出现斜率不存在的情况</p><p>数据存储<br>1.直线/线段：斜截式或一般式<br>$Ax + By + C = 0 or y = kx + b$<br>2.圆：圆⼼坐标，圆的半径<br>$(x − a)^2 + (y − b)^2 = r2$<br>3.多边形：多边形上所有点坐标（推荐使用逆时针）<br>4.半平面：<br>$Ax + By + C ≥ 0$</p><p>公式定理：<br>1.正弦定理：AAS/ASA解三角形<br>2.余弦定理：SAS/SSS解三角形<br>3.质⼼：点集的加权平均数，就是好⼏个杠杆原理<br>$x_0=\frac{1}{N}\sum_{i=1}^N x_im_i,y_0=\frac{1}{N}\sum_{i=1}^N y_im_i$<br>三角形质⼼：中线交点<br>四边形质⼼：两个三角形质⼼的质⼼，权重为三角形面积<br>定比分点：杠杆原理坐标化<br>4.三角形面积:正弦定理，叉积，海伦公式:$p = (a + b + c)/2; S = \sqrt{p(p − a)(p − b)(p− c)}$</p><p>应用：<br>1.判折线段的拐向 a,b,c $\vec{ab} \times \vec{bc}$ 叉积大于0则左拐，否则右拐<br>2.判断点是否在线段上: a,b,c </p><p>（忘了按保存键就先咕咕咕了2333</p><p>C 语言里 double atan2(double y,double x) 返回的是原点至点(x,y)的方位角，即与 x 轴的夹角。</p><p>取值范围为 <img src="https://gss0.bdstatic.com/-4o3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D47/sign=f817c2ad06e9390152028c3979ec2ec3/dcc451da81cb39db32331ddbd7160924aa18304f.jpg" alt="img"> ；</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//得到两直线相交的交点</span></span><br><span class="line"><span class="function">point <span class="title">getpoint</span><span class="params">(line a,line b)</span></span>&#123;</span><br><span class="line"> point aa=a.e-a.s,bb=b.e-b.s,cc=b.s-a.s;</span><br><span class="line">   <span class="keyword">double</span> t=(bb^cc)/(aa^bb);</span><br><span class="line">   <span class="keyword">return</span> (point)&#123;a.s+aa*t&#125;; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;point&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; x,&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt;&amp;lt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; point &amp;amp;a,&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; point &amp;amp;b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a.x&amp;lt;b.x||a.x==b.x&amp;amp;&amp;amp;a.y&amp;lt;b.y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="省选" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/"/>
    
      <category term="计算几何" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
    
      <category term="计算几何" scheme="www.degage.xyz/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>马拉车算法</title>
    <link href="www.degage.xyz/2019/01/13/%E9%A9%AC%E6%8B%89%E8%BD%A6/"/>
    <id>www.degage.xyz/2019/01/13/马拉车/</id>
    <published>2019-01-13T07:49:38.000Z</published>
    <updated>2019-01-14T15:13:33.560Z</updated>
    
    <content type="html"><![CDATA[<p>马拉车算法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">init</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="built_in">strlen</span>(str);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=<span class="number">0</span>;i&lt;=<span class="number">2</span>*n;j++,i+=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i]=<span class="string">'#'</span>;</span><br><span class="line">        s[i+<span class="number">1</span>]=str[j];</span><br><span class="line">    &#125;</span><br><span class="line">    s[<span class="number">0</span>]=<span class="string">'$'</span>;</span><br><span class="line">    s[<span class="number">2</span>*n+<span class="number">1</span>]=<span class="string">'#'</span>;</span><br><span class="line">    s[<span class="number">2</span>*n+<span class="number">2</span>]=<span class="string">'@'</span>;</span><br><span class="line">    s[<span class="number">2</span>*n+<span class="number">3</span>]=<span class="string">'\n'</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>*n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">manacher</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mx=<span class="number">0</span>,p=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(mx&gt;i)len[i]=min(mx-i,len[<span class="number">2</span>*p-i]);</span><br><span class="line">        <span class="keyword">else</span> len[i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(s[i-len[i]]==s[i+len[i]])len[i]++;</span><br><span class="line">        <span class="keyword">if</span>(len[i]+i&gt;mx)mx=len[i]+i,p=i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;马拉车算法&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *str)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n=&lt;span class=&quot;built_in&quot;&gt;strlen&lt;/span&gt;(str);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,j=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*n;j++,i+=&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s[i]=&lt;span class=&quot;string&quot;&gt;&#39;#&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s[i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]=str[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&#39;$&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*n+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&#39;#&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*n+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&#39;@&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    s[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*n+&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]=&lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*n+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="省选" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/"/>
    
    
      <category term="马拉车算法" scheme="www.degage.xyz/tags/%E9%A9%AC%E6%8B%89%E8%BD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="www.degage.xyz/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>莫比乌斯反演未整理</title>
    <link href="www.degage.xyz/2019/01/02/58/"/>
    <id>www.degage.xyz/2019/01/02/58/</id>
    <published>2019-01-02T15:07:13.000Z</published>
    <updated>2019-01-14T15:17:20.928Z</updated>
    
    <content type="html"><![CDATA[<p>$\sigma(p^k)=k+1$<br>$phi(p^k)=p^{k-1}\times(p-1)$<br>$(phi\star1)(p^k)=p^k$<br><a id="more"></a></p><p>证明：</p><p>$1(i)=1$</p><p>$(phi\star1)(n)=\sum_{i|n}(phi(i)\times 1)$<br>$(phi\star1)(p^k)=(phi)(1)+(phi)(p^1)+….+(phi)(p^k)$<br>套公式$phi(p^k)=p^{k-1}\times(p-1)$<br>化为$(p-1)\times(p^0+p^1+…+p^{k-1})=p^k$</p><p>由于$(phi\star1)(p^k)$是积性函数，所以$phi\star1=id$</p><p>莫比乌斯反演：</p><p>定义<strong>1</strong>的逆是$\mu​$（莫比乌斯函数）</p><p>如果$g=f\star1$，就有$f=f\ \star 1\ \star\mu=g\ \star\mu$</p><p>所以$g(n)=\sum_{d|n}f(d)$则$f(n)=\sum_{d|n}g(d)\times\mu(n/d)$ （莫比乌斯反演定理）</p><p>另一个方向：$g(n)=\sum_{n|d}f(d)$ 则$f(n)=\sum_{n|d}g(d)\times \mu(d/n)$  其中d的取值范围为f的定义域</p><script type="math/tex; mode=display">\mu(n)=(-1)^{t}</script><p>当 <script type="math/tex">n=p_1\times p_2\times ...\times p_t且p_i各不相同</script></p><script type="math/tex; mode=display">else  \mu(i)=0</script><p>结论： $phi=\mu \star id$  </p><p>莫比乌斯函数常用的两个性质：</p><ul><li>对于任意正整数$n$，$\sum_{d|n}\mu(d)=[n=1]$。（$[n=1]$表示只有当$n=1$成立时，返回值为1；否则，值为0；(这个就是用μ是容斥系数的性质可以证明)<strong>(PS:这一条性质是莫比乌斯反演中最常用的)</strong></li><li>对于任意正整数n，$\sum_{d|n}\frac{\mu(d)}{d}=\frac{\phi(n)}{n}$。（这个性质很奇妙，它把欧拉函数和莫比乌斯函数结合起来）</li></ul><p>整除分块：</p><ul><li>对于每一个$\lfloor\frac{n}{i}\rfloor$我们可以通过打表<del>(或理性的证明)</del>可以发现：有许多$\lfloor\frac{n}{i}\rfloor$的值是一样的，而且它们呈一个块状分布；再通过打表之类的各种方法,我们惊喜的发现对于每一个值相同的块，它的最后一个数就是$n/(n/i)$。得出这个结论后，我们就可以做的$O(\sqrt{n})$处理了。<br>附一个整除分块的代码吧：</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>,r;l&lt;=n;l=r+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    r=n/(n/l);</span><br><span class="line">    ans+=(r-l+<span class="number">1</span>)\star(n/l);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_mu</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])&#123;prim[++cnt]=i;mu[i]=<span class="number">-1</span>;&#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prim[j]\stari&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[prim[j]\stari]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prim[j]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span> mu[i\starprim[j]]=-mu[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;$\sigma(p^k)=k+1$&lt;br&gt;$phi(p^k)=p^{k-1}\times(p-1)$&lt;br&gt;$(phi\star1)(p^k)=p^k$&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="省选" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/"/>
    
    
      <category term="数学" scheme="www.degage.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>祎隋</title>
    <link href="www.degage.xyz/2019/01/02/57/"/>
    <id>www.degage.xyz/2019/01/02/57/</id>
    <published>2019-01-02T15:07:03.000Z</published>
    <updated>2019-01-13T08:16:18.139Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我愿…"><a href="#我愿…" class="headerlink" title="我愿…"></a>我愿…</h2><p><font face="等线">《祎隋》</font>&lt;/br&gt;  </p><p><font face="等线">我愿意是歌声不成形体</font>&lt;/br&gt;    </p><p><font face="等线">又发自于你</font> &lt;/br&gt;   </p><p><font face="等线">轻托你的灵动美丽</font>&lt;/br&gt;    </p><p><font face="等线">我愿意是烟火转瞬即逝</font>&lt;/br&gt;    </p><p><font face="等线">又引你一视</font>&lt;/br&gt;    </p><p><font face="等线">映亮你的天真欣喜</font>&lt;/br&gt;    </p><p><font face="等线">我愿意是微风不被注意</font>&lt;/br&gt;    </p><p><font face="等线">又轻拂着你</font>&lt;/br&gt;    </p><p><font face="等线">飘扬你的醉人芳香</font>&lt;/br&gt;    </p><p><font face="等线">我愿意是皎月独凌寒处</font>&lt;/br&gt;    </p><p><font face="等线">又照你一世</font>&lt;/br&gt;   </p><p><font face="等线">平稳你的夜夜美梦</font>&lt;/br&gt;   </p><p><font face="等线">我愿意是时光静默流淌</font> &lt;/br&gt;  </p><p><font face="等线">又伴你一生</font>&lt;/br&gt;    </p><p><font face="等线">承载你的所有过往</font>&lt;/br&gt;    </p><p><img src="https://i.loli.net/2019/01/02/5c2cd3d567883.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;我愿…&quot;&gt;&lt;a href=&quot;#我愿…&quot; class=&quot;headerlink&quot; title=&quot;我愿…&quot;&gt;&lt;/a&gt;我愿…&lt;/h2&gt;&lt;p&gt;&lt;font face=&quot;等线&quot;&gt;《祎隋》&lt;/font&gt;&amp;lt;/br&amp;gt;  &lt;/p&gt;
&lt;p&gt;&lt;font face=&quot;等线&quot;&gt;我愿
      
    
    </summary>
    
      <category term="杂诗" scheme="www.degage.xyz/categories/%E6%9D%82%E8%AF%97/"/>
    
    
      <category term="杂诗" scheme="www.degage.xyz/tags/%E6%9D%82%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>网络流</title>
    <link href="www.degage.xyz/2018/12/16/56/"/>
    <id>www.degage.xyz/2018/12/16/56/</id>
    <published>2018-12-16T15:18:54.000Z</published>
    <updated>2019-01-14T15:17:03.572Z</updated>
    
    <content type="html"><![CDATA[<p>首先主要是关于退流的理解，仔细理解这张图：<a id="more"></a><br><img src="https://i.loli.net/2018/12/16/5c166eaf19395.png" alt=""></p><p>然后上模板：<br>最大流<br>(1)EK:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 205</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxm 2005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,x,y,z;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">eage</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> from,to,next,cap,flow;</span><br><span class="line">&#125;e[maxm&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> first[maxn],np=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">e[++np]=(eage)&#123;u,v,first[u],c,<span class="number">0</span>&#125;;</span><br><span class="line">first[u]=np;</span><br><span class="line">e[++np]=(eage)&#123;v,u,first[v],<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">first[v]=np;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">int</span> a[maxn],fa[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">other</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> i&amp;<span class="number">1</span>?i+<span class="number">1</span>:i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">a[s]=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">fa[s]=<span class="number">0</span>;</span><br><span class="line">q.push(s);</span><br><span class="line"><span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line"><span class="keyword">int</span> i=q.front();q.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=first[i];p;p=e[p].next)&#123;</span><br><span class="line"><span class="keyword">int</span> j=e[p].to;</span><br><span class="line"><span class="keyword">if</span>(!a[j]&amp;&amp;e[p].cap&gt;e[p].flow)&#123;</span><br><span class="line">a[j]=min(a[i],e[p].cap-e[p].flow);</span><br><span class="line">fa[j]=p;</span><br><span class="line">q.push(j);</span><br><span class="line"><span class="keyword">if</span>(j==t) <span class="keyword">return</span> a[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//如果没有找到任意一条 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> maxflow=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> del=bfs(<span class="number">1</span>,n);</span><br><span class="line"><span class="keyword">if</span>(del==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">maxflow+=del;</span><br><span class="line"><span class="keyword">int</span> f=fa[n];</span><br><span class="line"><span class="keyword">while</span>(f)&#123;</span><br><span class="line">e[f].flow+=del;</span><br><span class="line">e[other(f)].flow-=del;</span><br><span class="line">f=fa[e[f].from];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> maxflow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line"> add(x,y,z);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%d"</span>,ek());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>(2)Dinic<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 205</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxm 2005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">eage</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> from,to,next,cap,flow;</span><br><span class="line">&#125;e[maxm&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> first[maxn],np=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">e[++np]=(eage)&#123;u,v,first[u],c,<span class="number">0</span>&#125;;</span><br><span class="line">first[u]=np;</span><br><span class="line">e[++np]=(eage)&#123;v,u,first[v],<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">first[v]=np;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,x,y,z,s,t;</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">other</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> i&amp;<span class="number">1</span>?i+<span class="number">1</span>:i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> mn)</span></span>&#123;</span><br><span class="line">vis[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i==t) <span class="keyword">return</span> mn;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=first[i];p;p=e[p].next)&#123;</span><br><span class="line"><span class="keyword">int</span> j=e[p].to;</span><br><span class="line"><span class="keyword">int</span> dis=e[p].cap-e[p].flow;</span><br><span class="line"><span class="keyword">if</span>(vis[j]||dis==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> del=dfs(j,min(mn,dis));</span><br><span class="line"><span class="keyword">if</span>(del==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">e[p].flow+=del;</span><br><span class="line">e[other(p)].flow-=del;</span><br><span class="line"><span class="keyword">return</span> del; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxflow=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">int</span> del=dfs(s,inf);</span><br><span class="line"><span class="keyword">if</span>(del==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">maxflow+=del;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> maxflow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line">s=<span class="number">1</span>,t=n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">add(x,y,z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,ek());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>费用流:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 305</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxm 3005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">eage</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> from,to,next,cap,flow,w;</span><br><span class="line">&#125;e[maxm&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> first[maxn],np=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> c,<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">e[++np]=(eage)&#123;u,v,first[u],c,<span class="number">0</span>,w&#125;;</span><br><span class="line">first[u]=np;</span><br><span class="line">e[++np]=(eage)&#123;v,u,first[v],<span class="number">0</span>,<span class="number">0</span>,-w&#125;;</span><br><span class="line">first[v]=np;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">other</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> i&amp;<span class="number">1</span>?i+<span class="number">1</span>:i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,x,y,z,w,dist[maxn],a[maxn],fa[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">spfa</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    a[<span class="number">1</span>]=inf;</span><br><span class="line">    fa[<span class="number">1</span>]=<span class="number">0</span>;q.push(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(dist));</span><br><span class="line">    dist[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">    <span class="keyword">int</span> i=q.front();q.pop();</span><br><span class="line">    vis[i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> p=first[i];p;p=e[p].next)&#123;</span><br><span class="line">    <span class="keyword">int</span> j=e[p].to;</span><br><span class="line">    <span class="keyword">if</span>(e[p].cap&gt;e[p].flow)</span><br><span class="line">    <span class="keyword">if</span>(dist[j]&gt;dist[i]+e[p].w)&#123;</span><br><span class="line">    dist[j]=dist[i]+e[p].w;</span><br><span class="line">    a[j]=min(a[i],e[p].cap-e[p].flow);</span><br><span class="line">    fa[j]=p;</span><br><span class="line">    <span class="keyword">if</span>(!vis[j]) q.push(j),vis[j]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ek</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> maxflow=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> cost=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(spfa())&#123;</span><br><span class="line">maxflow+=a[n];</span><br><span class="line">cost+=dist[n]*a[n];</span><br><span class="line"><span class="keyword">int</span> f=fa[n];</span><br><span class="line"><span class="keyword">while</span>(f)&#123;</span><br><span class="line">e[f].flow+=a[n];</span><br><span class="line">e[other(f)].flow-=a[n];</span><br><span class="line">f=fa[e[f].from];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d"</span>,maxflow,cost);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;x,&amp;y,&amp;z,&amp;w);</span><br><span class="line">add(x,y,z,w);</span><br><span class="line">&#125;</span><br><span class="line">ek();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>二分图:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 405</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxm 40005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">eage</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> from,to,next,cap,flow;</span><br><span class="line">&#125;e[maxm&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> first[maxn],np=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">e[++np]=(eage)&#123;u,v,first[u],c,<span class="number">0</span>&#125;;</span><br><span class="line">first[u]=np;</span><br><span class="line">e[++np]=(eage)&#123;v,u,first[v],<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">first[v]=np;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">other</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> i&amp;<span class="number">1</span>?i+<span class="number">1</span>:i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,x,y,s,t;</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> mn)</span></span>&#123;</span><br><span class="line">vis[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i==t) <span class="keyword">return</span> mn;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=first[i];p;p=e[p].next)&#123;</span><br><span class="line"><span class="keyword">int</span> j=e[p].to,dis=e[p].cap-e[p].flow;</span><br><span class="line"><span class="keyword">if</span>(vis[j]||dis==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">int</span> del=dfs(j,min(mn,dis));</span><br><span class="line">    <span class="keyword">if</span>(del==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">    e[p].flow+=del;</span><br><span class="line">    e[other(p)].flow-=del;</span><br><span class="line">    <span class="keyword">return</span> del;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ek</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> maxflow=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">int</span> del=dfs(s,inf);</span><br><span class="line">    <span class="keyword">if</span>(del==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    maxflow+=del; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,maxflow);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">s=<span class="number">401</span>,t=<span class="number">402</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;y);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=y;j++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">add(i,x+n,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">add(s,i,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) add(i+n,t,<span class="number">1</span>);<span class="comment">//最多只出去一个，保证两边不连到一个点上 </span></span><br><span class="line">ek();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先主要是关于退流的理解，仔细理解这张图：&lt;/p&gt;
    
    </summary>
    
      <category term="省选" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/"/>
    
    
      <category term="网络流" scheme="www.degage.xyz/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>划分物品</title>
    <link href="www.degage.xyz/2018/11/08/55/"/>
    <id>www.degage.xyz/2018/11/08/55/</id>
    <published>2018-11-08T08:33:39.000Z</published>
    <updated>2019-01-14T15:16:50.619Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>你有 n 个物品，第 i 个物品的重量是$w_i$。</p><p>你需要把这些物品划分成若干组，满足每一组的重量和都是质数。</p><p>两个方案是不同的当且仅当存在两个物品 i 和 j，在第一个方案里他们处在同一组，第二个方案里他们不处在同一组。（对998244353取模）<a id="more"></a></p><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><p>$n&lt;=16,w_i&lt;=100$</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>10<br>2 3 4 5 6 7 8 9 10 11</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>1177</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>一道经典的状压dp题，我们可以用$sum_i$来表示状态为i的集合所表示的重量和(类似思路也可以搞其他的)设$dp_i$表示状态为i的集合所能容纳的方案数，那么$dp_i=\sum_{(j属于i且j为素数)}dp_{i-j}$。显然这样是不正确的，因为有重复的，所以我们便固定一个x属于i，然后可以正确dp。</p><p>上代码:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxv 1605</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line">ll dp[<span class="number">1</span>&lt;&lt;<span class="number">18</span>];</span><br><span class="line"><span class="keyword">int</span> sum[<span class="number">1</span>&lt;&lt;<span class="number">18</span>];</span><br><span class="line"><span class="keyword">int</span> n,w[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[maxv];</span><br><span class="line"><span class="keyword">int</span> prime[maxv&gt;&gt;<span class="number">1</span>],top=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ready</span><span class="params">()</span></span>&#123;</span><br><span class="line">vis[<span class="number">0</span>]=vis[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxv<span class="number">-5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[i]) prime[++top]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=top&amp;&amp;prime[j]*i&lt;=maxv<span class="number">-5</span>;j++)&#123;</span><br><span class="line">vis[prime[j]*i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> all=(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[i]);sum[<span class="number">1</span>&lt;&lt;i<span class="number">-1</span>]=w[i];</span><br><span class="line">&#125;</span><br><span class="line">dp[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=all;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>((i|(<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>))!=i) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>((<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>)==i) <span class="keyword">continue</span>;</span><br><span class="line">sum[i]=sum[i-(<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>)]+w[j];<span class="comment">//可用如此方式来记录每个状态代表的值 </span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=all;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> x=i&amp;(-i);<span class="comment">//固定一个 注意i&amp;-i的值是1&lt;&lt;后的 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i;j;j=i&amp;(j<span class="number">-1</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>((x|j)!=j) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(vis[sum[j]]) <span class="keyword">continue</span>;</span><br><span class="line">dp[i]=(dp[i]+dp[i-j])%mod;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,dp[all]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ready();</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;你有 n 个物品，第 i 个物品的重量是$w_i$。&lt;/p&gt;
&lt;p&gt;你需要把这些物品划分成若干组，满足每一组的重量和都是质数。&lt;/p&gt;
&lt;p&gt;两个方案是不同的当且仅当存在两个物品 i 和 j，在第一个方案里他们处在同一组，第二个方案里他们不处在同一组。（对998244353取模）&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="dp" scheme="www.degage.xyz/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>计数</title>
    <link href="www.degage.xyz/2018/11/07/54/"/>
    <id>www.degage.xyz/2018/11/07/54/</id>
    <published>2018-11-07T13:04:13.000Z</published>
    <updated>2019-01-14T15:16:47.906Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>既然是萌萌哒 visit_world 的比赛，那必然会有一道计数题啦！<br>考虑一个N个节点的二叉树，它的节点被标上了$1-N$的编号. 并且，编号为i的节点在二叉树的前序遍历中恰好是第i个出现.<br>我们定义$A_i$表示编号为i的点在二叉树的中序遍历中出现的位置.<br>现在，给出m个限制条件，第i个限制条件给出了$u_i,v_i$,表示$A_{u_i}<a_{v_i}$，也即中序遍历中$u_i$在$v_i$之前出现. 你需要计算有多少种不同的带标号二叉树满足上述全部限制条件，答案对$1e9+7$取模.<!--more--=""></a_{v_i}$，也即中序遍历中$u_i$在$v_i$之前出现.></p><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><p>$T&lt;=5,N&lt;=400,M&lt;=10^3$</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>3 5<br>0<br>3 2<br>1 2<br>2 3<br>3 3<br>1 2<br>2 3<br>3 1</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>42<br>1<br>0</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先M=0可以看出是个卡特兰数。<br>然后我们知道先序遍历，根据其特性来枚举出合法的中序遍历，每次找到一个根，枚举它左边有多少个，右边有多少个，然后判断是否合法，合法的话方案数乘起来累加。<br>见图：<br><img src="https://i.loli.net/2018/11/07/5be3017335edf.png" alt=""><br>首先枚举后有三个大小关系：根的中序遍历大于任意左子树的，任意右子树的大于根的，任意右子树的大于左子树的。<br>然后发现check是$n^2$的，而dp又是$n^3$的，这样就$n^5$了，<font color="red">这里有个很nice的思路</font>，用二维前缀和优化，如果要求i的中序遍历小于j的，那么$a[i][j]=1$，然后sum求一波二维前缀和，对于$sum[i][j]$其含义便是1-i中小于1-j中的个数和，那么我们询问$[l1,r1]小于[l2,r2]$就为$sum[r1,r2]-sum[l1-1,r2]-sum[r1,l2-1]+sum[l1-1,l2-1]$然后就优化成$O(1)$的check了，整体复杂度就被优化至了$O(n^3)$，真的TQL%%%</p><p>上代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 405</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn][maxn],n,t,m,x,y,sum[maxn][maxn];</span><br><span class="line">ll dp[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> l1,<span class="keyword">int</span> r1,<span class="keyword">int</span> l2,<span class="keyword">int</span> r2)</span></span>&#123;<span class="comment">//如果返回值说l1~r1有小于l2~r2的 </span></span><br><span class="line">    <span class="keyword">return</span> sum[r1][r2]-sum[l1<span class="number">-1</span>][r2]-sum[r1][l2<span class="number">-1</span>]+sum[l1<span class="number">-1</span>][l2<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> l1,<span class="keyword">int</span> r1,<span class="keyword">int</span> l2,<span class="keyword">int</span> r2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(calc(l2,r2,l1,r1))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(calc(now,now,l1,r1))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(calc(l2,r2,now,now))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="built_in">memset</span>(sum,<span class="number">0</span>,<span class="keyword">sizeof</span>(sum));</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">a[x][y]=<span class="number">1</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">sum[i][j]=sum[i<span class="number">-1</span>][j]+sum[i][j<span class="number">-1</span>]-sum[i<span class="number">-1</span>][j<span class="number">-1</span>]+a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) dp[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">1</span>;len&lt;=n;len++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> j=i+len;</span><br><span class="line"><span class="keyword">if</span>(j&gt;n) <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//其实这余下三坨是可以归在一起算的 </span></span><br><span class="line"><span class="keyword">if</span>(!calc(i,i,i+<span class="number">1</span>,j))dp[i][j]=(dp[i][j]+dp[i+<span class="number">1</span>][j])%mod;<span class="comment">//如果没有限制 </span></span><br><span class="line">        <span class="keyword">if</span>(!calc(i+<span class="number">1</span>,j,i,i))dp[i][j]=(dp[i][j]+dp[i+<span class="number">1</span>][j])%mod;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=i+<span class="number">1</span>;k&lt;j;k++)&#123;</span><br><span class="line"><span class="keyword">if</span>(check(i,i+<span class="number">1</span>,k,k+<span class="number">1</span>,j)) dp[i][j]=(dp[i][j]+dp[i+<span class="number">1</span>][k]*dp[k+<span class="number">1</span>][j])%mod;</span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dp[<span class="number">1</span>][n]);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;既然是萌萌哒 visit_world 的比赛，那必然会有一道计数题啦
      
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="dp" scheme="www.degage.xyz/tags/dp/"/>
    
      <category term="二维前缀和" scheme="www.degage.xyz/tags/%E4%BA%8C%E7%BB%B4%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
  </entry>
  
  <entry>
    <title>购物</title>
    <link href="www.degage.xyz/2018/11/07/53/"/>
    <id>www.degage.xyz/2018/11/07/53/</id>
    <published>2018-11-07T13:04:04.000Z</published>
    <updated>2019-01-14T15:16:44.244Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>visit_world 有一个商店，商店里卖 个商品，第 i 个的价格为$a_i$<br>我们称一个正整数 K 是美妙的，当且仅当我们可以在商店里选购若干个商品，使得价格之和落在区间$ [K, 2K]$ 中。<br>问：有多少个美妙的数。<a id="more"></a></p><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><p>$N&lt;=10^5,a_i&lt;=10^9$<br>时空限制：1s / 512MB</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>3<br>1 2 3</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>6</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>我们将$a_i$从小到大排序，对于前i个，假设它们和为sum,那么k能去到的范围即为$[\frac{sum+1}{2},sum]$，那么对于$\frac{sum-1}{2}$开始是覆盖的不到，我们便会减去一些来使覆盖，所以肯定是逐渐拿小的来，到最后剩下$a_i$，那么设前i-1个的和为sum’，则$[sum’+1,\frac{a_i-1}{2}]$是覆盖不到，所以最终把这些空隙减掉即可。</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">ll sum=<span class="number">0</span>,del=<span class="number">0</span>;</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">del+=max((a[i]+<span class="number">1</span>)/<span class="number">2</span>-sum<span class="number">-1</span>,<span class="number">0l</span>l);</span><br><span class="line">sum+=a[i]; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,sum-del);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;visit_world 有一个商店，商店里卖 个商品，第 i 个的价格为$a_i$&lt;br&gt;我们称一个正整数 K 是美妙的，当且仅当我们可以在商店里选购若干个商品，使得价格之和落在区间$ [K, 2K]$ 中。&lt;br&gt;问：有多少个美妙的数。&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="数学" scheme="www.degage.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>physics</title>
    <link href="www.degage.xyz/2018/11/06/52/"/>
    <id>www.degage.xyz/2018/11/06/52/</id>
    <published>2018-11-06T11:34:13.000Z</published>
    <updated>2019-01-14T15:16:41.357Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>一个n行m列的矩阵，每个为0或1，如果一个边长为K的正方形包含的所有数都为1，那么会形成一个强度为K的电场，有q次询问，每次询问会把1个1变做0，求每次询问的最大电场强度值。<a id="more"></a></p><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><p>$n,m&lt;=2 \ast 10^3 ,1&lt;=q&lt;=10^4$</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>5 5 5<br>+-+++<br>+++++<br>+++++<br>+++++<br>++++-<br>1 5<br>2 2<br>5 3<br>2 3<br>1 1</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>4<br>3<br>3<br>2<br>2</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先会想到用单调栈$n^2$计算最大1正方形，然后发现每改一个只会影响一列的up数组，然后发现如果答案递减不好维护，那么正难则反，我们先将所有的改动加进来，然后倒序考虑所有操作。<br>那么答案是会依次递增的，我们维护一个up和一个down数组来记录每个格子向上和向下最多多少格，对于每次询问，O(N)更新那一列的up和down，再O(n)单调队列扫一遍那一行，类似滑动窗口的来查询长度为k的序列的$min(up_i)和min(down_i)$，看它们加起来是否大于等于k，如果满足继续扩大k，否则标记答案。</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 2005 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxq 10005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y,ans;</span><br><span class="line">&#125;nd[maxq];</span><br><span class="line"><span class="keyword">int</span> n,m,a[maxn][maxn],q,st[maxn],top=<span class="number">0</span>,up[maxn][maxn],down[maxn][maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> maxx=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) up[i][j]=(a[i][j]==<span class="number">0</span>?<span class="number">0</span>:up[i<span class="number">-1</span>][j]+<span class="number">1</span>); </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--) down[i][j]=(a[i][j]==<span class="number">0</span>?<span class="number">0</span>:down[i+<span class="number">1</span>][j]+<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    st[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    top=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(top&amp;&amp;up[i][j]&lt;=up[i][st[top]])&#123;<span class="comment">//单调栈 </span></span><br><span class="line">    maxx=max(maxx,min(up[i][st[top]],j<span class="number">-1</span>-st[top<span class="number">-1</span>]));</span><br><span class="line">    top--;</span><br><span class="line">&#125;</span><br><span class="line">st[++top]=j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(top)&#123;</span><br><span class="line">maxx=max(maxx,min(up[i][st[top]],m-st[top<span class="number">-1</span>]));</span><br><span class="line">    top--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calcc</span><span class="params">(<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) up[i][j]=(a[i][j]==<span class="number">0</span>?<span class="number">0</span>:up[i<span class="number">-1</span>][j]+<span class="number">1</span>); </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--) down[i][j]=(a[i][j]==<span class="number">0</span>?<span class="number">0</span>:down[i+<span class="number">1</span>][j]+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> q1[maxn],q2[maxn],front1,front2,rear1,rear2;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(len&gt;min(n,m)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">front1=front2=rear1=rear2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="keyword">while</span>(front1&lt;rear1&amp;&amp;j-q1[front1]&gt;=len)front1++;</span><br><span class="line"><span class="keyword">while</span>(front1&lt;rear1&amp;&amp;up[i][q1[rear1<span class="number">-1</span>]]&gt;=up[i][j])rear1--;</span><br><span class="line">q1[rear1++]=j;</span><br><span class="line"><span class="keyword">while</span>(front2&lt;rear2&amp;&amp;j-q2[front2]&gt;=len)front2++;</span><br><span class="line"><span class="keyword">while</span>(front2&lt;rear2&amp;&amp;down[i][q2[rear2<span class="number">-1</span>]]&gt;=down[i][j])rear2--;</span><br><span class="line">q2[rear2++]=j;</span><br><span class="line"><span class="keyword">if</span>(j&gt;=len&amp;&amp;up[i][q1[front1]]+down[i][q2[front2]]<span class="number">-1</span>&gt;=len)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;q);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) a[i][j]=(s[j]==<span class="string">'+'</span>?<span class="number">1</span>:<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;nd[i].x,&amp;nd[i].y);a[nd[i].x][nd[i].y]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">calc();</span><br><span class="line">nd[q].ans=maxx;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=q;i&gt;=<span class="number">2</span>;i--)&#123;</span><br><span class="line">a[nd[i].x][nd[i].y]=<span class="number">1</span>;</span><br><span class="line">calcc(nd[i].y);<span class="comment">//更新 </span></span><br><span class="line">nd[i<span class="number">-1</span>].ans=nd[i].ans;</span><br><span class="line"><span class="keyword">while</span>(check(nd[i].x,maxx+<span class="number">1</span>)) maxx++,nd[i<span class="number">-1</span>].ans=maxx;<span class="comment">//只改动了这一行 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,nd[i].ans); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;一个n行m列的矩阵，每个为0或1，如果一个边长为K的正方形包含的所有数都为1，那么会形成一个强度为K的电场，有q次询问，每次询问会把1个1变做0，求每次询问的最大电场强度值。&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="正难则反" scheme="www.degage.xyz/tags/%E6%AD%A3%E9%9A%BE%E5%88%99%E5%8F%8D/"/>
    
      <category term="单调队列" scheme="www.degage.xyz/tags/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/"/>
    
      <category term="单调栈" scheme="www.degage.xyz/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>Chinese</title>
    <link href="www.degage.xyz/2018/11/06/51/"/>
    <id>www.degage.xyz/2018/11/06/51/</id>
    <published>2018-11-06T11:34:05.000Z</published>
    <updated>2019-01-14T15:16:38.112Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>一个n行m列的矩阵，每个格子可以填一个$1~k$的整数，矩阵中的一个格子为炼字当且仅当其值比其所在行和列的其它数都大，定义一个矩阵的精彩度为炼字的个数。设$f_i$为精彩度为i的方案数，显然:$\sum_{i=0}^{n \ast m} f_i=k^{n \ast m}$。现在你需要求出$\sum_{i=0}^{n \ast m} f_i \ast i mod (1e9+7)<a id="more"></a>$</p><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><p>$n,m&lt;=10^9,k&lt;=10^6$</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>2 2 2</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>8</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先，对$\sum_{i=0}^{n \ast m} f_i \ast i$的理解为所有方案中炼字的个数和，那么考虑对每个格子单独计算贡献，如图：<br><img src="https://i.loli.net/2018/11/06/5be18a56030c0.jpg" alt=""><br>那么每个格子产生的贡献即为</p><script type="math/tex; mode=display">\sum_{i=1}^{k} k^{(n-1) \ast (m-1)} \ast (i-1)^{n-1} \ast (i-1)^{m-1}</script><p>因为相应性质，我们只要再乘上$n \ast m$即为最终答案。</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">ll n,m,k;</span><br><span class="line"><span class="function">ll <span class="title">qkpow</span><span class="params">(ll t,ll pos)</span></span>&#123;</span><br><span class="line">ll ans=<span class="number">1</span>,base=t;</span><br><span class="line"><span class="keyword">while</span>(pos)&#123;</span><br><span class="line"><span class="keyword">if</span>(pos&amp;<span class="number">1</span>) ans=ans*base%mod;</span><br><span class="line">base=base*base%mod;</span><br><span class="line">pos&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">ll t1=qkpow(k,(n<span class="number">-1</span>)*(m<span class="number">-1</span>)); </span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;k;i++) ans=(ans+qkpow(i,n<span class="number">-1</span>)*qkpow(i,m<span class="number">-1</span>)%mod*t1%mod)%mod;</span><br><span class="line">ans=ans*n%mod*m%mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;一个n行m列的矩阵，每个格子可以填一个$1~k$的整数，矩阵中的一个格子为炼字当且仅当其值比其所在行和列的其它数都大，定义一个矩阵的精彩度为炼字的个数。设$f_i$为精彩度为i的方案数，显然:$\sum_{i=0}^{n \ast m} f_i=k^{n \ast m}$。现在你需要求出$\sum_{i=0}^{n \ast m} f_i \ast i mod (1e9+7)&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="数学" scheme="www.degage.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Certificate</title>
    <link href="www.degage.xyz/2018/11/05/50/"/>
    <id>www.degage.xyz/2018/11/05/50/</id>
    <published>2018-11-05T09:33:25.000Z</published>
    <updated>2019-01-14T15:16:35.353Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>已知有$N(N≤14)$个变量，变量取值0或1。<br>已知$f(0,0,⋯,0)，⋯，f(1,1,⋯,1)$的函数值。<br>对于每种输入$x=(x_0,x_1,⋯,x_n)$，求最少需要知道几个变量的值即可确定函数值。<br>举个例子：假设有两个变量，函数$f(a,b)=a\&amp;b$，那么对于$f(x)=0$，我们只要知道其中一个变量为0即可确定函数值为0，否则我们需要知道两个变量是否都为1，才能确定函数值为1。<a id="more"></a></p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>可以先$2^N$枚举选出的t个关键问题，再$2^N$判断，复杂度为$4^N$，可以勉强卡过。</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 16</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">1</span>&lt;&lt;maxn],check[<span class="number">1</span>&lt;&lt;maxn],n,a[<span class="number">1</span>&lt;&lt;maxn];</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">1</span>&lt;&lt;maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(x)&#123;</span><br><span class="line">cnt++;</span><br><span class="line">x-=x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> all=<span class="number">1</span>&lt;&lt;n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line"><span class="built_in">memset</span>(ans,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ans));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i];i++) a[i]=(s[i]==<span class="string">'0'</span>?<span class="number">0</span>:<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;all;i++)&#123;</span><br><span class="line">    <span class="built_in">memset</span>(check,<span class="number">-1</span>,<span class="keyword">sizeof</span>(check));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;all;j++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(check[i&amp;j]==<span class="number">-1</span>) check[i&amp;j]=a[j];</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(check[i&amp;j]!=a[j]) check[i&amp;j]=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> len=calc(i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;all;j++) <span class="keyword">if</span>(check[i&amp;j]==a[j]) ans[j]=min(ans[j],len);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;all;i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>,ans[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;已知有$N(N≤14)$个变量，变量取值0或1。&lt;br&gt;已知$f(0,0,⋯,0)，⋯，f(1,1,⋯,1)$的函数值。&lt;br&gt;对于每种输入$x=(x_0,x_1,⋯,x_n)$，求最少需要知道几个变量的值即可确定函数值。&lt;br&gt;举个例子：假设有两个变量，函数$f(a,b)=a\&amp;amp;b$，那么对于$f(x)=0$，我们只要知道其中一个变量为0即可确定函数值为0，否则我们需要知道两个变量是否都为1，才能确定函数值为1。&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="枚举" scheme="www.degage.xyz/tags/%E6%9E%9A%E4%B8%BE/"/>
    
  </entry>
  
  <entry>
    <title>树的距离</title>
    <link href="www.degage.xyz/2018/11/03/48/"/>
    <id>www.degage.xyz/2018/11/03/48/</id>
    <published>2018-11-03T02:25:50.000Z</published>
    <updated>2019-01-14T15:16:32.258Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>开始有一个空的集合S，进行Q次操作：</p><p>1.插入一个数x（如果已存在就忽略）<br>2.删除一个数x（如果不存在就忽略）<br>3.询问点集中数与x的最短距离<br>定义两个数a,b的距离为，每次将a乘一个质数或除以一个质数因子，使a变成b的最小步数。$（Q≤50000,x≤1000000，时限2秒）$<a id="more"></a></p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>对于两个数A,B:</p><script type="math/tex; mode=display">A=p_1^{a_1}+p_2^{a_2}+.....p_n^{a_n}</script><script type="math/tex; mode=display">B=p_1^{b_1}+p_2^{b_2}+.....p_n^{b_n}</script><p>(如果某些$p_i$，相应的次数为0)<br>那么A,B的距离即为</p><script type="math/tex; mode=display">\sum_{i=1}^n abs(a_i-b_i)</script><p>设gcd(A,B)为g，那么dis可以化为$num(\frac a{g})+num(\frac b{g})$，其中num(x)表示x包含的质数个数。<br>然后我们发现枚举B的话复杂度无法承受，那么转过来枚举A的因数来作为GCD，然后统计相应步数即可。当然这里可以用set或map来维护以谁为gcd的最小B.</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1000005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> prime[maxn&gt;&gt;<span class="number">1</span>],top=<span class="number">0</span>,s[maxn];</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ready</span><span class="params">()</span></span>&#123;</span><br><span class="line">vis[<span class="number">0</span>]=vis[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxn<span class="number">-5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[i]) prime[++top]=i,s[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=top&amp;&amp;i*prime[j]&lt;=maxn<span class="number">-5</span>;j++)&#123;</span><br><span class="line">vis[prime[j]*i]=<span class="number">1</span>;s[prime[j]*i]=s[i]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> q,op,x;</span><br><span class="line"><span class="keyword">int</span> c[maxn][<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;op,&amp;x);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">1</span>&amp;&amp;!vis[x])&#123;</span><br><span class="line">vis[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;<span class="number">1l</span>l*j*j&lt;=x;j++) <span class="keyword">if</span>(x%j==<span class="number">0</span>)&#123; </span><br><span class="line">    c[j][s[x]-s[j]]++;</span><br><span class="line">    c[x/j][s[j]]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">2</span>&amp;&amp;vis[x])&#123;</span><br><span class="line">vis[x]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;<span class="number">1l</span>l*j*j&lt;=x;j++) <span class="keyword">if</span>(x%j==<span class="number">0</span>)&#123;</span><br><span class="line">c[j][s[x]-s[j]]--;</span><br><span class="line">c[x/j][s[j]]--;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">3</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;<span class="number">1l</span>l*j*j&lt;=x;j++) <span class="keyword">if</span>(x%j==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">20</span>;k++) <span class="keyword">if</span>(c[j][k]) ans=min(ans,k+s[x]-s[j]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">20</span>;k++) <span class="keyword">if</span>(c[x/j][k]) ans=min(ans,k+s[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ans==<span class="number">1e9</span>) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ready();</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>滔滔的map代码：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;map&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cmath&gt;</span></span><br><span class="line"><span class="comment">#include&lt;vector&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">const int maxn=<span class="number">1000000</span>+<span class="number">5</span>,inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">int n,f[maxn];</span><br><span class="line">bool vis[maxn];</span><br><span class="line">vector&lt;int&gt;primes;</span><br><span class="line">map&lt;int,int&gt;mp[maxn];</span><br><span class="line">void init()&#123;</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">2</span>;i&lt;=maxn-<span class="number">5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!f[i])f[i]=<span class="number">1</span>,primes.push_back(i);</span><br><span class="line"><span class="keyword">for</span>(int k=<span class="number">0</span>;k&lt;primes.size()&amp;&amp;i*primes[k]&lt;=maxn-<span class="number">5</span>;k++)&#123;</span><br><span class="line">f[i*primes[k]]=f[i]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i%primes[k]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void ins(int x)&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[x])<span class="keyword">return</span>;vis[x]=<span class="number">1</span>;</span><br><span class="line">int sq=sqrt(x+<span class="number">0</span>.<span class="number">5</span>);</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">1</span>;i&lt;=sq;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>)mp[i][f[x]]++;</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>&amp;&amp;i*i!=x)mp[x/i][f[x]]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void del(int x)&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[x])<span class="keyword">return</span>;vis[x]=<span class="number">0</span>;</span><br><span class="line">int sq=sqrt(x+<span class="number">0</span>.<span class="number">5</span>);</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">1</span>;i&lt;=sq;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>)<span class="keyword">if</span>(--mp[i][f[x]]==<span class="number">0</span>)mp[i].erase(f[x]);</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>&amp;&amp;i*i!=x)<span class="keyword">if</span>(--mp[x/i][f[x]]==<span class="number">0</span>)mp[x/i].erase(f[x]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int Find(int i)&#123;</span><br><span class="line"><span class="keyword">if</span>(!mp[i].size())<span class="keyword">return</span> inf*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> mp[i].<span class="keyword">begin</span>()-&gt;first;</span><br><span class="line">&#125;</span><br><span class="line">void solve(int x)&#123;</span><br><span class="line">int sq=sqrt(x+<span class="number">0</span>.<span class="number">5</span>),ans=inf;</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">1</span>;i&lt;=sq;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>)ans=min(ans,f[x]+Find(i)-<span class="number">2</span>*f[i]);</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>&amp;&amp;i*i!=x)ans=min(ans,f[x]+Find(x/i)-<span class="number">2</span>*f[x/i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ans&gt;=inf)printf(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">else</span> printf(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">init();</span><br><span class="line">scanf(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">1</span>,op,x;i&lt;=n;i++)&#123;</span><br><span class="line">scanf(<span class="string">"%d%d"</span>,&amp;op,&amp;x);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">1</span>)ins(x);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">2</span>)del(x);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">3</span>)solve(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;开始有一个空的集合S，进行Q次操作：&lt;/p&gt;
&lt;p&gt;1.插入一个数x（如果已存在就忽略）&lt;br&gt;2.删除一个数x（如果不存在就忽略）&lt;br&gt;3.询问点集中数与x的最短距离&lt;br&gt;定义两个数a,b的距离为，每次将a乘一个质数或除以一个质数因子，使a变成b的最小步数。$（Q≤50000,x≤1000000，时限2秒）$&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="数学" scheme="www.degage.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="枚举" scheme="www.degage.xyz/tags/%E6%9E%9A%E4%B8%BE/"/>
    
      <category term="map" scheme="www.degage.xyz/tags/map/"/>
    
  </entry>
  
  <entry>
    <title>小G的树</title>
    <link href="www.degage.xyz/2018/11/03/47/"/>
    <id>www.degage.xyz/2018/11/03/47/</id>
    <published>2018-11-03T02:25:42.000Z</published>
    <updated>2019-01-14T15:16:29.506Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>给出n个点的树，每条边长会等概率是1或2，求树的直径的期望。（$n≤60$）<a id="more"></a></p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>只要会树型dp求树的直径，然后枚举就可以$O(n^4)$过了</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 70</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll g[maxn&lt;&lt;<span class="number">1</span>][maxn&lt;&lt;<span class="number">1</span>],ff[maxn][maxn&lt;&lt;<span class="number">1</span>][maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> n,x,y;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">eage</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> to,next;</span><br><span class="line">&#125;e[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> np=<span class="number">0</span>,first[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">e[++np]=(eage)&#123;v,first[u]&#125;;</span><br><span class="line">first[u]=np;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sz[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">     ff[i][<span class="number">0</span>][<span class="number">0</span>]=sz[i]=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> p=first[i];p;p=e[p].next)&#123;</span><br><span class="line"> <span class="keyword">int</span> j=e[p].to;</span><br><span class="line"> <span class="keyword">if</span>(j==f) <span class="keyword">continue</span>;</span><br><span class="line"> dfs(j,i);</span><br><span class="line"> <span class="built_in">memset</span>(g,<span class="number">0</span>,<span class="keyword">sizeof</span>(g));</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> l1=<span class="number">0</span>;l1&lt;=sz[i]*<span class="number">2</span>;l1++)</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> z1=l1;z1&lt;=sz[i]*<span class="number">2</span>;z1++)<span class="keyword">if</span>(ff[i][l1][z1])</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> l2=<span class="number">0</span>;l2&lt;=sz[j]*<span class="number">2</span>;l2++)</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> z2=l2;z2&lt;=sz[j]*<span class="number">2</span>;z2++) <span class="keyword">if</span>(ff[j][l2][z2])&#123;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">1</span>;len&lt;=<span class="number">2</span>;len++)&#123;</span><br><span class="line">     <span class="keyword">int</span> t=max(z1,z2);</span><br><span class="line">     t=max(t,l1+l2+len);</span><br><span class="line"> g[max(l1,l2+len)][t]+=ff[i][l1][z1]*ff[j][l2][z2];;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sz[i]+=sz[j];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;=sz[i]*<span class="number">2</span>;l++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> z=l;z&lt;=sz[i]*<span class="number">2</span>;z++)</span><br><span class="line">ff[i][l][z]=g[l][z];</span><br><span class="line"> &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);add(x,y);add(y,x);</span><br><span class="line">&#125; </span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">double</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;=n*<span class="number">2</span>;l++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> z=l;z&lt;=n*<span class="number">2</span>;z++)&#123;</span><br><span class="line">ans+=ff[<span class="number">1</span>][l][z]*z;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lf"</span>,ans/(<span class="number">1l</span>l&lt;&lt;(n<span class="number">-1</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;给出n个点的树，每条边长会等概率是1或2，求树的直径的期望。（$n≤60$）&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="概率期望" scheme="www.degage.xyz/tags/%E6%A6%82%E7%8E%87%E6%9C%9F%E6%9C%9B/"/>
    
      <category term="树型dp" scheme="www.degage.xyz/tags/%E6%A0%91%E5%9E%8Bdp/"/>
    
  </entry>
  
  <entry>
    <title>郁闷的小G</title>
    <link href="www.degage.xyz/2018/11/03/46/"/>
    <id>www.degage.xyz/2018/11/03/46/</id>
    <published>2018-11-03T02:25:35.000Z</published>
    <updated>2019-01-14T15:16:27.161Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>有5种类型的题E,EM,M,MH,H若干，其中E,EM可用来出第一题，EM,M,MH可用来出第二题，MH,H可用来出第三题，求最多可出多少场模拟赛。（设N为最大数，$1≤N≤10^18$）<a id="more"></a></p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>我干考试时懵了直接上了个大模拟，结果用二分简单到爆炸！！！</p><p>模拟：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll e,em,m,mh,h,a,b,c,x=<span class="number">1</span>,y=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld%lld"</span>,&amp;e,&amp;em,&amp;m,&amp;mh,&amp;h);</span><br><span class="line"> a=e+em,b=m,c=mh+h;</span><br><span class="line"> <span class="keyword">if</span>(a&lt;=b) x=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">if</span>(c&lt;=b) y=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">if</span>(!x&amp;&amp;!y)&#123;</span><br><span class="line"> ll ans=min(a,min(b,c));</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span>(!x)&#123;</span><br><span class="line"> ll mid=(b+c)/<span class="number">2</span>;</span><br><span class="line"> <span class="keyword">if</span>(mid-b&lt;=mh) y=mid-b;</span><br><span class="line"> <span class="keyword">else</span> y=mh;</span><br><span class="line"> ll minn=y+b;</span><br><span class="line"> ll ans=min(a,minn);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span>(!y)&#123;</span><br><span class="line"> ll mid=(a+b)/<span class="number">2</span>;</span><br><span class="line"> <span class="keyword">if</span>(mid-b&lt;=em) x=mid-b;</span><br><span class="line"> <span class="keyword">else</span> x=em;</span><br><span class="line"> ll minn=b+x;</span><br><span class="line"> ll ans=min(minn,c);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(a&gt;c)&#123;</span><br><span class="line"> ll mv=a-c;</span><br><span class="line"> <span class="keyword">if</span>(mv&gt;em) mv=em;</span><br><span class="line">a=a-mv; </span><br><span class="line"> <span class="keyword">if</span>(b+mv&gt;=c)&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%lld"</span>,c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(mv==em)&#123;</span><br><span class="line">b+=mv;</span><br><span class="line">ll mid=(b+c)/<span class="number">2</span>;</span><br><span class="line">             <span class="keyword">if</span>(mid-b&lt;=mh) y=mid-b;</span><br><span class="line">             <span class="keyword">else</span> y=mh;</span><br><span class="line">             ll minn=y+b;</span><br><span class="line">             <span class="built_in">printf</span>(<span class="string">"%lld"</span>,minn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">b+=mv;</span><br><span class="line">em-=mv;<span class="comment">//还剩的步数 </span></span><br><span class="line">ll mvv=min(em,mh);</span><br><span class="line">ll cnt=(c-b)/<span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(cnt&gt;mvv) cnt=mvv;</span><br><span class="line">ll minn=b+cnt*<span class="number">2</span>;</span><br><span class="line">c=c-cnt,a=a-cnt;em-=mvv;mh-=mvv;</span><br><span class="line"><span class="keyword">if</span>(minn&lt;c)&#123;</span><br><span class="line">   <span class="keyword">if</span>(em)&#123;</span><br><span class="line">   ll mid=(minn+c)/<span class="number">2</span>;</span><br><span class="line">                 <span class="keyword">if</span>(mid-minn&lt;=em) y=mid-minn;</span><br><span class="line">                 <span class="keyword">else</span> y=em;</span><br><span class="line">                 minn=minn+y;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(mh)&#123;</span><br><span class="line">   ll mid=(minn+c)/<span class="number">2</span>;</span><br><span class="line">                 <span class="keyword">if</span>(mid-minn&lt;=mh) y=mid-minn;</span><br><span class="line">                 <span class="keyword">else</span> y=mh;</span><br><span class="line">                 minn=minn+y;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,minn);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span>&#123;</span><br><span class="line"> ll mv=c-a;</span><br><span class="line"> <span class="keyword">if</span>(mv&gt;mh) mv=mh;</span><br><span class="line">c=c-mv; </span><br><span class="line"> <span class="keyword">if</span>(b+mv&gt;=a)&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%lld"</span>,a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(mv==mh)&#123;</span><br><span class="line">b+=mv;</span><br><span class="line">ll mid=(a+b)/<span class="number">2</span>;</span><br><span class="line">             <span class="keyword">if</span>(mid-b&lt;=em) x=mid-b;</span><br><span class="line">             <span class="keyword">else</span> x=em;</span><br><span class="line">             ll minn=b+x;</span><br><span class="line">             <span class="built_in">printf</span>(<span class="string">"%lld"</span>,minn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">b+=mv;</span><br><span class="line">mh-=mv;<span class="comment">//还剩的步数 </span></span><br><span class="line">ll mvv=min(em,mh);</span><br><span class="line">ll cnt=(c-b)/<span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(cnt&gt;mvv) cnt=mvv;</span><br><span class="line">ll minn=b+cnt*<span class="number">2</span>;</span><br><span class="line">c=c-cnt,a=a-cnt;em-=mvv;mh-=mvv;</span><br><span class="line"><span class="keyword">if</span>(minn&lt;c)&#123;</span><br><span class="line">   <span class="keyword">if</span>(em)&#123;</span><br><span class="line">   ll mid=(minn+c)/<span class="number">2</span>;</span><br><span class="line">                 <span class="keyword">if</span>(mid-minn&lt;=em) y=mid-minn;</span><br><span class="line">                 <span class="keyword">else</span> y=em;</span><br><span class="line">                 minn=minn+y;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(mh)&#123;</span><br><span class="line">   ll mid=(minn+c)/<span class="number">2</span>;</span><br><span class="line">                 <span class="keyword">if</span>(mid-minn&lt;=mh) y=mid-minn;</span><br><span class="line">                 <span class="keyword">else</span> y=mh;</span><br><span class="line">                 minn=minn+y;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,minn);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>滔滔的二分：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(LL mid,LL A,LL B,LL C,LL A_B,LL B_C)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(A&lt;mid)&#123;<span class="keyword">if</span>(A+A_B&lt;mid)<span class="keyword">return</span> <span class="literal">false</span>;A_B-=mid-A;&#125;B+=A_B;</span><br><span class="line"><span class="keyword">if</span>(B&lt;mid)&#123;<span class="keyword">if</span>(B+B_C&lt;mid)<span class="keyword">return</span> <span class="literal">false</span>;B_C-=mid-B;&#125;</span><br><span class="line">C+=B_C;<span class="keyword">if</span>(C&lt;mid)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">LL A,B,C,A_B,B_C;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld%lld"</span>,&amp;A,&amp;A_B,&amp;B,&amp;B_C,&amp;C);</span><br><span class="line">LL L=min(&#123;A,B,C&#125;),R=max(&#123;A+A_B,B+A_B+B_C,B_C+C&#125;),ans;</span><br><span class="line"><span class="keyword">while</span>(L&lt;=R)&#123;</span><br><span class="line">LL mid=(L+R)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(check(mid,A,B,C,A_B,B_C))ans=mid,L=mid+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> R=mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;有5种类型的题E,EM,M,MH,H若干，其中E,EM可用来出第一题，EM,M,MH可用来出第二题，MH,H可用来出第三题，求最多可出多少场模拟赛。（设N为最大数，$1≤N≤10^18$）&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="模拟" scheme="www.degage.xyz/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="二分" scheme="www.degage.xyz/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>取数游戏</title>
    <link href="www.degage.xyz/2018/11/01/45/"/>
    <id>www.degage.xyz/2018/11/01/45/</id>
    <published>2018-11-01T09:39:42.000Z</published>
    <updated>2019-01-14T15:16:24.646Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>有一个$N \ast M$的矩阵，你需要进行恰好K次操作，每次可以选择其中一行或者其中一列，将其中的元素全部累加到ans里去，然后把全中的这些数全部减去P，问ans最大是多少<a id="more"></a></p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>2 2 2 2<br>1 3<br>2 4</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>11</p><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><p>$N,M&lt;=1000,K&lt;=10^5,0&lt;=P&lt;=100,1&lt;A_{ij}&lt;1000$</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先探究性质发现取行或取列只分别对列和行整体造成影响，贪心还是要取大的，所以只考虑对自身的影响。再发现取行或取列都是分别对以后的取列或取行造成-p的影响，所以先后是没有关系的。<br>那么先预处理出去行k次和取列k次最大值，再O(n)枚举行列分别取多少，再减去$i \ast (k-i) \ast p$即可。</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll h[maxn],l[maxn],sh[maxn],sl[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,k,p,x;</span><br><span class="line">priority_queue&lt;ll&gt;q,qq;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;m,&amp;k,&amp;p);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">    h[i]+=x;l[j]+=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) q.push(h[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">ll t=q.top();q.pop();</span><br><span class="line">sh[i]=sh[i<span class="number">-1</span>]+t;t-=m*p;</span><br><span class="line">q.push(t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) qq.push(l[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">ll t=qq.top();qq.pop();</span><br><span class="line">sl[i]=sl[i<span class="number">-1</span>]+t;t-=n*p;</span><br><span class="line">qq.push(t); </span><br><span class="line">&#125;</span><br><span class="line">ll ans=<span class="number">-1000000000000</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k;i++)&#123;</span><br><span class="line">  ans=max(ans,sh[i]+sl[k-i]<span class="number">-1l</span>l*i*(k-i)*p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    init();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;有一个$N \ast M$的矩阵，你需要进行恰好K次操作，每次可以选择其中一行或者其中一列，将其中的元素全部累加到ans里去，然后把全中的这些数全部减去P，问ans最大是多少&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="贪心" scheme="www.degage.xyz/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="优先队列" scheme="www.degage.xyz/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>字符串</title>
    <link href="www.degage.xyz/2018/11/01/44/"/>
    <id>www.degage.xyz/2018/11/01/44/</id>
    <published>2018-11-01T09:32:22.000Z</published>
    <updated>2019-01-14T15:16:22.052Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>要求用m种字母构造一个长度为n的字符串，使得该字符串的所有长度为k的子串均为回文串，问方案数<a id="more"></a></p><h1 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h1><p>三个整数$n,m,k(1≤n,m,k≤2000)$</p><h1 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h1><p>输出满足条件的字符串数量，结果模$10^9+7$</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>5 2 4</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>2</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>对于每个位置，考虑它在一个回文串中的位置，与它相应的与它用并查集相连(回文串必须一样)，最后剩下若干集合，有cnt个，那么答案即为$m^{cnt}$，当然也可以直接分k,n关系讨论</p><p>并查集代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;P;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x3f3f3f3f</span>,maxn=<span class="number">100001</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Pow</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)ans=(ll)ans*a%mod;</span><br><span class="line">        a=(ll)a*a%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,k,fa[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fa[x]==x)<span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> fa[x]=find(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">unite</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x=find(x),y=find(y);</span><br><span class="line">    <span class="keyword">if</span>(x==y)<span class="keyword">return</span> ;</span><br><span class="line">    fa[x]=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,m,k;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;k))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)fa[i]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;k&amp;&amp;i+k-j&lt;=n;j+=<span class="number">2</span>)</span><br><span class="line">                unite(i,i+k-j);</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            <span class="keyword">if</span>(fa[i]==i)ans++;</span><br><span class="line">        ans=Pow(m,ans);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>nk关系代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 2005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="function">ll <span class="title">qkpow</span><span class="params">(ll t,<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line">ll ans=<span class="number">1</span>,base=t;</span><br><span class="line"><span class="keyword">while</span>(pos)&#123;</span><br><span class="line"><span class="keyword">if</span>(pos&amp;<span class="number">1</span>) ans=ans*base%mod;</span><br><span class="line">base=base*base%mod;</span><br><span class="line">pos=pos&gt;&gt;<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">    <span class="keyword">if</span>(k==<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,qkpow(m,n));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(k==n) <span class="built_in">printf</span>(<span class="string">"%lld"</span>,qkpow(m,(k+<span class="number">1</span>)/<span class="number">2</span>));</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(k&amp;<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%lld"</span>,m*m%mod);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(k&gt;n) <span class="built_in">printf</span>(<span class="string">"%lld"</span>,qkpow(m,n));</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d"</span>,m);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;要求用m种字母构造一个长度为n的字符串，使得该字符串的所有长度为k的子串均为回文串，问方案数&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="数学" scheme="www.degage.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="并查集" scheme="www.degage.xyz/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>Coin</title>
    <link href="www.degage.xyz/2018/10/31/43/"/>
    <id>www.degage.xyz/2018/10/31/43/</id>
    <published>2018-10-31T11:38:09.000Z</published>
    <updated>2019-01-14T15:16:17.318Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>小M有个n行m列的棋盘，每个格子都包含了至多一枚硬币，硬币正面或者反面朝上。<br>小M和小D轮流操作，小M先手。每个人可以选择棋盘中没在之前被选择过的一行或者一列，然后将所选的行或列上的硬币全部翻转，即正面变成反面，反面变成正面。<a id="more"></a><br>当所有硬币都正面朝上或者所有的行列都被选择，游戏结束。最后一次操作的玩家将会获得1分。如果当前局面所有的硬币都正面朝上，小M和小D都将获得2分的额外收益。<br>问两个人如果都按最优策略操作，即最大化自己的分数，那么小M最后的得分是多少。（T组数据，1≤T,n,m≤100）<br>保证每列至少有一个硬币，每行至少有一个反面朝上的硬币。</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>1<br>2 5<br>exexe<br>xeoex</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>3</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先如果能构成全向上的局面，那么两人肯定是要构成的。否则就按照n+m奇偶来决定最后谁走。<br>我们假设向上为0，向下为1，那么对于每一个$a_{ij}$，要求满足$h_i xor l_j xor a_{ij}==0$，变化一下即为<br>$h_i xor l_j==a_{i-j}$，所以我们设$a_{ij}$为边权，然后可以连边维护，用类似二分图染色的方法扫一遍以判断是否合法(本可以用并查集维护，但貌似方式不对，联系不紧密)<br>那么我们现在就会有诸多联通块，对每个联通块是个独立游戏，我们开始讨论：<br>如果是奇-奇那么先手在这一块必定赢，而偶偶先手必输但是没影响因为如果有奇奇的话，先手最后是多下一步的，这是第一部分。第二部分就是奇偶，如果只有奇数个奇偶，那么最终先手可以多选一个奇偶的奇而获胜，否则后手选到奇偶的偶获胜。<br>注意细节实现就行了。</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 105</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">eage</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> to,next,len;</span><br><span class="line">&#125;e[maxn*maxn*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> np=<span class="number">0</span>,first[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">e[++np]=(eage)&#123;v,first[u],len&#125;;</span><br><span class="line">first[u]=np;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> t,n,m;</span><br><span class="line"><span class="keyword">char</span> op[maxn];</span><br><span class="line"><span class="keyword">bool</span> ok;</span><br><span class="line"><span class="keyword">int</span> base;</span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">int</span> color[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">cnt[color[i]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=first[i];p;p=e[p].next)&#123;</span><br><span class="line"><span class="keyword">int</span> j=e[p].to,c=e[p].len;</span><br><span class="line"><span class="keyword">if</span>(c==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(color[j])&#123;</span><br><span class="line">    <span class="keyword">if</span>(color[j]!=color[i]) ok=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">color[j]=color[i];</span><br><span class="line">dfs(j);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(color[j])&#123;</span><br><span class="line"><span class="keyword">if</span>(color[i]==color[j]) ok=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">color[j]=<span class="number">3</span>-color[i];</span><br><span class="line">dfs(j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+m;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!color[i])&#123;</span><br><span class="line">cnt[<span class="number">1</span>]=cnt[<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">color[i]=<span class="number">1</span>;</span><br><span class="line">ok=<span class="literal">true</span>;</span><br><span class="line">dfs(i);</span><br><span class="line"><span class="keyword">if</span>(!ok) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(cnt[<span class="number">1</span>]&amp;<span class="number">1</span>&amp;&amp;cnt[<span class="number">2</span>]&amp;<span class="number">1</span>) base^=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!(cnt[<span class="number">1</span>]&amp;<span class="number">1</span>)&amp;&amp;!(cnt[<span class="number">2</span>]&amp;<span class="number">1</span>)) ;</span><br><span class="line"><span class="keyword">else</span> base^=<span class="number">2</span>;</span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="built_in">memset</span>(color,<span class="number">0</span>,<span class="keyword">sizeof</span>(color));</span><br><span class="line"><span class="built_in">memset</span>(first,<span class="number">0</span>,<span class="keyword">sizeof</span>(first));</span><br><span class="line">np=<span class="number">0</span>;</span><br><span class="line">ok=<span class="literal">true</span>;</span><br><span class="line">base=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,op+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"> <span class="keyword">if</span>(op[j]==<span class="string">'x'</span>)&#123;</span><br><span class="line"> add(i,j+n,<span class="number">1</span>);</span><br><span class="line"> add(j+n,i,<span class="number">1</span>);</span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">if</span>(op[j]==<span class="string">'o'</span>)&#123;</span><br><span class="line"> add(i,j+n,<span class="number">0</span>);</span><br><span class="line"> add(j+n,i,<span class="number">0</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">run();</span><br><span class="line"><span class="keyword">if</span>(!ok)&#123;</span><br><span class="line"><span class="keyword">int</span> calc=n+m;</span><br><span class="line"><span class="keyword">if</span>(calc&amp;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(base) <span class="built_in">printf</span>(<span class="string">"3\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"2\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;小M有个n行m列的棋盘，每个格子都包含了至多一枚硬币，硬币正面或者反面朝上。&lt;br&gt;小M和小D轮流操作，小M先手。每个人可以选择棋盘中没在之前被选择过的一行或者一列，然后将所选的行或列上的硬币全部翻转，即正面变成反面，反面变成正面。&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="隐式图" scheme="www.degage.xyz/tags/%E9%9A%90%E5%BC%8F%E5%9B%BE/"/>
    
      <category term="博弈论" scheme="www.degage.xyz/tags/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
      <category term="二分图" scheme="www.degage.xyz/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>Poker</title>
    <link href="www.degage.xyz/2018/10/31/42/"/>
    <id>www.degage.xyz/2018/10/31/42/</id>
    <published>2018-10-31T11:29:24.000Z</published>
    <updated>2019-01-14T15:16:14.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>一共有n张扑克牌，第i张扑克牌的编号为$a_i$，这里保证n为偶数。<br>先将n张牌随机的分成两堆大小为$\frac{n}{2}$的牌，一人拿一堆，随机为均匀随机。<a id="more"></a><br>将n张牌随机打乱，两人开始比大小，按顺序翻各自的牌，如果前者大于后者，那么前者得一分，否则后者得一分，问前者和后者得分的期望，输出答案乘上n!然后对1e9+7取模的值。</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>4<br>1 2 3 2</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>20 28</p><h2 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h2><p>$n&lt;=10^5$</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>其实是个假期望题。<br>发现总方案数是n!，所以实际上是找全排列并统计得分。然后发现是排列，所以每次可以固定两个不同的数，然后乘上(n-2)!</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn];</span><br><span class="line">ll jc;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">jc=<span class="number">1l</span>l;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">if</span>(i&lt;=n<span class="number">-2</span>) jc=jc*(ll)i%mod;</span><br><span class="line">&#125;</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line">ll ans1=<span class="number">0</span>;</span><br><span class="line">ll cnt=<span class="number">0</span>;</span><br><span class="line">ll len=n/<span class="number">2</span>; </span><br><span class="line">ll ans2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==a[i+<span class="number">1</span>])&#123;</span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">cnt++;</span><br><span class="line">ans1=(ans1+cnt*jc%mod*(ll)(n-i)%mod)%mod;</span><br><span class="line">ans2=(ans2+cnt*jc%mod*(ll)(n-i+cnt<span class="number">-1</span>)%mod)%mod;</span><br><span class="line">cnt=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans1=ans1*len%mod;</span><br><span class="line">ans2=ans2*len%mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld "</span>,ans1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans2);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;一共有n张扑克牌，第i张扑克牌的编号为$a_i$，这里保证n为偶数。&lt;br&gt;先将n张牌随机的分成两堆大小为$\frac{n}{2}$的牌，一人拿一堆，随机为均匀随机。&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="概率期望" scheme="www.degage.xyz/tags/%E6%A6%82%E7%8E%87%E6%9C%9F%E6%9C%9B/"/>
    
      <category term="数学" scheme="www.degage.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>当那一天来临</title>
    <link href="www.degage.xyz/2018/10/30/41/"/>
    <id>www.degage.xyz/2018/10/30/41/</id>
    <published>2018-10-30T15:17:20.000Z</published>
    <updated>2019-01-14T15:16:11.456Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>一条线段上有n个点，每个点有一个权值，要是一个人经过一个权值为w的点，那么他的金钱就增加w（w可以为负数）。<a id="more"></a><br>现在Jack最开始在1号点，Rose最开始在n号点（此时Jack只有1号点的金钱，Rose只有n号点的金钱），他们要走到某个站点相会，整个过程中只能相向而行，并且每一次走一个点。首先是Jack选择自己向右走一个点或者让Rose向左做一个点；接着是Rose选择让Jack向右走一个点或者自己向左走一个点；接着又是Jack选择，直到两个人相遇。<br>现在两人都采用最优策略，问相遇之后他们谁金钱多。如果Jack比Rose的金钱多，输出“win”，相等输出“tie”，少则输出“lose”。（T组数据，T≤10,1≤n≤10000）</p><h1 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h1><p>3<br>4<br>1 3 2 3<br>4<br>1 2 2 3<br>5<br>-1 -2 -1 -1 -1 </p><h1 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h1><p>win<br>tie<br>lose</p><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><p>对于100%的数据，1&lt;=N&lt;=10000.</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先我们可以将题目的选项实际化，让自己走就是正常，让别人走就是让终点往自己这边移动，然后我们发现答案只与最终相遇位置有关。那么举几个例子，发现在n为偶数时，先手能够决定终点是在n/2+1或者n/2.而在n为奇数时，若先手先让自己走，那么后手能决定终点在n/2+1或n/2+1+1;若先手先让对面走，那么后手能决定终点在n/2+1或n/2。(所以大力分情况讨论即可)实际上n为奇数就是-1变成n为偶数然后交换先手权罢了。</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> t,n,a[maxn],sum1,sum2;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">sum1=sum2=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> z=n/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">if</span>(i&lt;=z) sum1+=a[i];</span><br><span class="line"><span class="keyword">if</span>(i&gt;=z) sum2+=a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(n&amp;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> t=sum1-sum2;</span><br><span class="line"><span class="keyword">int</span> changez=-a[z]-a[z<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">int</span> changey=a[z]+a[z+<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> change=max(changey,changez);<span class="comment">//由先手决定</span></span><br><span class="line">t=min(t,t+change);<span class="comment">//由后手决定</span></span><br><span class="line"><span class="keyword">if</span>(t&gt;<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"win\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"tie\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(t&lt;<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"lose\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> t=sum1-sum2;</span><br><span class="line"><span class="keyword">int</span> change=-a[z]-a[z<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(change&gt;<span class="number">0</span>) t+=change;</span><br><span class="line"><span class="keyword">if</span>(t&gt;<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"win\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"tie\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(t&lt;<span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">"lose\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++) init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;一条线段上有n个点，每个点有一个权值，要是一个人经过一个权值为w的点，那么他的金钱就增加w（w可以为负数）。&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="博弈论" scheme="www.degage.xyz/tags/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>假如战争今天爆发</title>
    <link href="www.degage.xyz/2018/10/30/40/"/>
    <id>www.degage.xyz/2018/10/30/40/</id>
    <published>2018-10-30T09:48:28.000Z</published>
    <updated>2019-01-14T15:16:08.792Z</updated>
    
    <content type="html"><![CDATA[<p><font color="green">假如<del>战争今天爆发</del>生活欺骗了你</font></p><h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>有n件物品，每件物品要被三个机器一次加工（即是说，只有被第一个机器加工后才能被第二个机器加工，被第二个机器加工后才能被第三个机器加工）。第i件物品被三个机器加工所需要的时间分别为$A_i,B_i,C_i$，保证 $min(C_i)≥max(B_i)$。每个机器同一时刻只能加工一件物品，求让每件物品都被三个机器加工完所需要的最少时间。$（1≤n≤100000,0<a_i,b_i,c_i<106）<a id="more">$</a_i,b_i,c_i<106）<a></p><h1 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h1><p>3<br>5 3 4<br>3 2 9<br>3 4 8</p><h1 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h1><p>26</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先可以假设已经排好了顺序，那么计算最终时间，设dp(i,j)表示第i个被第j个机器加完工的时间，那么:<br>$dp[i][j]=max(dp[i][j-1],dp[i-1][j])+a_{ij}$，那我们把它转移到图上面即从(1,1)到(n,3)，每次可以从左边或上边转移过来，实际上就发现是求最长路，如图：<br><img src="https://i.loli.net/2018/11/06/5be1a22f9e267.png" alt=""><br>那么对于绿色和黄色的我们交换其间任意两个是没有影响的，而对于蓝色和黄色处便会有影响，这便是决定排列顺序的，所以当i要排在j前面的条件如下：</p><script type="math/tex; mode=display">max(a_{i1}+a_{i2}+a_{i3}+a_{j3},a_{i1}+a_{j1}+a_{j2}+a_{j3})<=max(a_{j1}+a_{j2}+a_{j3}+a_{i3},a_{j1}+a_{i1}+a_{i2}+a_{i3})</script><script type="math/tex; mode=display">max(a_{i2}+a_{i3},a_{j1}+a_{j2})+a_{i1}+a_{j3}<=max(a_{j2}+a_{j3},a_{i1}+a_{i2})+a_{j1}+a_{i3}</script><p>设$a_{i1}+a_{i2}$为$A_i$，$a_{i2}+a_{i3}$为$B_i$，那么，转化为：</p><script type="math/tex; mode=display">max(B_i,A_j)+A_i-B_i<=max(B_j,A_i)+A_j-B_j</script><p>进一步转化为：</p><script type="math/tex; mode=display">max(-A_j,-B_i)<=max(-A_i,-B_j)</script><p>那么以这个为关键字排序就欧克了，就可以得到最终的最优排列顺序。</p><p>上代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll suma[maxn],sumc[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(node x,node y)&#123;</span><br><span class="line"><span class="keyword">int</span> ai=x.a+x.b,aj=y.a+y.b,bi=x.b+x.c,bj=y.b+y.c;</span><br><span class="line"><span class="keyword">return</span> max(-aj,-bi)&lt;=max(-ai,-bj);</span><br><span class="line">&#125;</span><br><span class="line">&#125;nd[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;nd[i].a,&amp;nd[i].b,&amp;nd[i].c);</span><br><span class="line">    sort(nd+<span class="number">1</span>,nd+n+<span class="number">1</span>);</span><br><span class="line">    ll ta=<span class="number">0</span>,tb=<span class="number">0</span>,tc=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    ta+=nd[i].a;</span><br><span class="line"><span class="keyword">if</span>(tb&lt;ta) tb=ta;</span><br><span class="line">tb+=nd[i].b;</span><br><span class="line"><span class="keyword">if</span>(tc&lt;tb) tc=tb;</span><br><span class="line">tc+=nd[i].c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,tc);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;font color=&quot;green&quot;&gt;假如&lt;del&gt;战争今天爆发&lt;/del&gt;生活欺骗了你&lt;/font&gt;&lt;/p&gt;
&lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;有n件物品，每件物品要被三个机器一次加工（即是说，只有被第一个机器加工后才能被第二个机器加工，被第二个机器加工后才能被第三个机器加工）。第i件物品被三个机器加工所需要的时间分别为$A_i,B_i,C_i$，保证 $min(C_i)≥max(B_i)$。每个机器同一时刻只能加工一件物品，求让每件物品都被三个机器加工完所需要的最少时间。$（1≤n≤100000,0&lt;/p&gt;
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="贪心" scheme="www.degage.xyz/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="dp" scheme="www.degage.xyz/tags/dp/"/>
    
      <category term="最长路" scheme="www.degage.xyz/tags/%E6%9C%80%E9%95%BF%E8%B7%AF/"/>
    
  </entry>
  
</feed>
