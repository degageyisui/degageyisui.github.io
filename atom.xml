<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>祎隋</title>
  
  <subtitle>祎隋如你，春风十里不及你</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="www.degage.xyz/"/>
  <updated>2019-01-18T07:22:15.502Z</updated>
  <id>www.degage.xyz/</id>
  
  <author>
    <name>degage</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>平衡树板子</title>
    <link href="www.degage.xyz/2019/01/18/%E6%9D%83%E5%80%BC%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    <id>www.degage.xyz/2019/01/18/权值平衡树/</id>
    <published>2019-01-18T01:46:45.000Z</published>
    <updated>2019-01-18T07:22:15.502Z</updated>
    
    <content type="html"><![CDATA[<p>qwq蒟蒻太蒻了a发现自己splay都不会敲了</p><p>权值平衡树：（按照权值的大小来维护，左边小右边大<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100005</span></span><br><span class="line"><span class="keyword">int</span> val[maxn],cnt[maxn],ch[maxn][<span class="number">2</span>],fa[maxn],sz[maxn],rt=<span class="number">0</span>,np=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> x==ch[fa[x]][<span class="number">1</span>];&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">link</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">bool</span> kind)</span></span>&#123;</span><br><span class="line">fa[x]=y;ch[y][kind]=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">upload</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">sz[x]=sz[ch[x][<span class="number">0</span>]]+sz[ch[x][<span class="number">1</span>]]+cnt[x]; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y=fa[x],z=fa[y];</span><br><span class="line"><span class="keyword">bool</span> kind=check(x);</span><br><span class="line"><span class="keyword">int</span> k=ch[x][!kind];</span><br><span class="line">link(k,y,kind);</span><br><span class="line">link(x,z,check(y));<span class="comment">//原来y在z哪边 在y连x之前，否则就变了 </span></span><br><span class="line">link(y,x,!kind); </span><br><span class="line">upload(y);upload(x); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> goal)</span></span>&#123;<span class="comment">//代入的为编号,val[x]才为它实际值 </span></span><br><span class="line"><span class="keyword">while</span>(fa[x]!=goal)&#123;</span><br><span class="line"><span class="keyword">int</span> y=fa[x],z=fa[y];</span><br><span class="line"><span class="keyword">if</span>(z!=goal) (check(x)^check(y))?rotate(x):rotate(y);<span class="comment">//z等于goal旋一次就欧克了 </span></span><br><span class="line">rotate(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(fa[x]==<span class="number">0</span>) rt=x;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> now=rt;</span><br><span class="line"><span class="keyword">while</span>(ch[now][x&gt;val[now]]&amp;&amp;val[now]!=x) </span><br><span class="line"> now=ch[now][x&gt;val[now]];<span class="comment">//如果没有这个数就停顿 </span></span><br><span class="line">splay(now,<span class="number">0</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="comment">//插入权值 </span></span><br><span class="line"><span class="keyword">int</span> f=<span class="number">0</span>,now=rt;</span><br><span class="line"><span class="keyword">while</span>(now&amp;&amp;val[now]!=x) f=now,now=ch[now][x&gt;val[now]];</span><br><span class="line"><span class="keyword">if</span>(now) cnt[now]++;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">now=++np;</span><br><span class="line">val[now]=x;</span><br><span class="line"><span class="keyword">if</span>(f) ch[f][x&gt;val[f]]=now;</span><br><span class="line">fa[now]=f;</span><br><span class="line">cnt[now]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">splay(now,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prnx</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">bool</span> f)</span></span>&#123;<span class="comment">//x为值，返回的为编号 </span></span><br><span class="line">find(x);</span><br><span class="line"><span class="keyword">int</span> now=rt;</span><br><span class="line"><span class="keyword">if</span>(val[now]&lt;x&amp;&amp;!f||val[now]&gt;x&amp;&amp;f) <span class="keyword">return</span> now;</span><br><span class="line">now=ch[now][f];</span><br><span class="line"><span class="keyword">while</span>(ch[now][!f]) now=ch[now][!f];</span><br><span class="line"><span class="keyword">return</span> now;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> pre=prnx(x,<span class="number">0</span>),last=prnx(x,<span class="number">1</span>);</span><br><span class="line">splay(pre,<span class="number">0</span>);splay(last,pre);</span><br><span class="line">    <span class="keyword">int</span> delt=ch[last][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span>(cnt[delt]&gt;<span class="number">1</span>) &#123;cnt[delt]--,splay(delt,<span class="number">0</span>);&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;ch[last][<span class="number">0</span>]=<span class="number">0</span>;splay(last,<span class="number">0</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kth</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> k)</span></span>&#123;<span class="comment">//查询当前子树的第k的编号 </span></span><br><span class="line"><span class="keyword">if</span>(sz[now]&lt;k) <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//不存在的</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(k&gt;sz[ch[now][<span class="number">0</span>]]+cnt[now]) k-=cnt[now]+sz[ch[now][<span class="number">0</span>]],now=ch[now][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(sz[ch[now][<span class="number">0</span>]]&gt;=k) now=ch[now][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">splay(now,<span class="number">0</span>);<span class="keyword">return</span> now;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kth</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="comment">//查询值为x的排名第几 </span></span><br><span class="line">    find(x);</span><br><span class="line">    <span class="keyword">return</span> sz[ch[rt][<span class="number">0</span>]]+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,opt,x;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">insert(INT_MIN);</span><br><span class="line">insert(INT_MAX);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;opt,&amp;x);</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">1</span>)&#123;</span><br><span class="line">insert(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">2</span>)&#123;</span><br><span class="line">del(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">3</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,kth(x)<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">4</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,val[kth(rt,x+<span class="number">1</span>)]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">5</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,val[prnx(x,<span class="number">0</span>)]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">6</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,val[prnx(x,<span class="number">1</span>)]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>文艺平衡树：（按照中序遍历来维护，中序遍历不会变，如果插入是按照编号顺序的，那么可以理解为左边编号小，右边编号大</p><p>所以如果你在一个文艺平衡树中写find同时又要维护它的性质，那么就可以加一个rank函数来返回值在其中的编号，来维持中序遍历</p><p>code:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,l,r;</span><br><span class="line"><span class="keyword">int</span> val[maxn],cnt[maxn],sz[maxn],ch[maxn][<span class="number">2</span>],fa[maxn],rt=<span class="number">0</span>,np=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> x==ch[fa[x]][<span class="number">1</span>];&#125;</span><br><span class="line"><span class="keyword">bool</span> rev[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">link</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">bool</span> kind)</span></span>&#123;</span><br><span class="line">fa[x]=y;ch[y][kind]=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">download</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!rev[x]) <span class="keyword">return</span>;</span><br><span class="line">swap(ch[x][<span class="number">0</span>],ch[x][<span class="number">1</span>]);</span><br><span class="line">rev[ch[x][<span class="number">0</span>]]^=<span class="number">1</span>;rev[ch[x][<span class="number">1</span>]]^=<span class="number">1</span>;</span><br><span class="line">rev[x]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">upload</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">sz[x]=sz[ch[x][<span class="number">0</span>]]+sz[ch[x][<span class="number">1</span>]]+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y=fa[x],z=fa[y];</span><br><span class="line"><span class="keyword">bool</span> kind=check(x);</span><br><span class="line"><span class="keyword">int</span> k=ch[x][!kind];</span><br><span class="line">link(k,y,kind);</span><br><span class="line">link(x,z,check(y));</span><br><span class="line">link(y,x,!kind);</span><br><span class="line">upload(y);upload(x); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> goal)</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(fa[x]!=goal)&#123;</span><br><span class="line"> <span class="keyword">int</span> y=fa[x],z=fa[y];</span><br><span class="line"> <span class="keyword">if</span>(z!=goal) (check(x)^check(y))?rotate(x):rotate(y);</span><br><span class="line"> rotate(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(fa[x]==<span class="number">0</span>) rt=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> now=rt;</span><br><span class="line"><span class="keyword">while</span>(ch[now][x&gt;val[now]]&amp;&amp;val[now]!=x) now=ch[now][x&gt;val[now]];</span><br><span class="line">splay(now,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> now=rt,f=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(now) f=now,now=ch[now][<span class="number">1</span>];</span><br><span class="line">now=++np;</span><br><span class="line">link(now,f,<span class="number">1</span>);cnt[now]=<span class="number">1</span>;val[now]=x;</span><br><span class="line">splay(now,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">prnx</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">bool</span> f)</span></span>&#123;</span><br><span class="line">find(x);</span><br><span class="line"><span class="keyword">int</span> now=rt;</span><br><span class="line"><span class="keyword">if</span>(val[now]&lt;x&amp;&amp;!f||val[now]&gt;x&amp;&amp;f) <span class="keyword">return</span> now;</span><br><span class="line">    now=ch[now][f];</span><br><span class="line">    <span class="keyword">while</span>(ch[now][!f]) now=ch[now][!f];</span><br><span class="line">    <span class="keyword">return</span> now;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kth</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">download(now);</span><br><span class="line"><span class="keyword">if</span>(k&lt;=sz[ch[now][<span class="number">0</span>]]) <span class="keyword">return</span> kth(ch[now][<span class="number">0</span>],k);</span><br><span class="line"><span class="keyword">if</span>(k&gt;sz[ch[now][<span class="number">0</span>]]+<span class="number">1</span>) <span class="keyword">return</span> kth(ch[now][<span class="number">1</span>],k-sz[ch[now][<span class="number">0</span>]]<span class="number">-1</span>);</span><br><span class="line">splay(now,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> now;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rvs</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=kth(rt,l);</span><br><span class="line"><span class="keyword">int</span> y=kth(rt,r+<span class="number">2</span>);</span><br><span class="line">splay(x,<span class="number">0</span>);splay(y,x);</span><br><span class="line">rev[ch[y][<span class="number">0</span>]]^=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">out</span><span class="params">(<span class="keyword">int</span> now)</span></span>&#123;</span><br><span class="line">download(now);</span><br><span class="line"><span class="keyword">if</span>(ch[now][<span class="number">0</span>]) out(ch[now][<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">if</span>(now!=<span class="number">1</span>&amp;&amp;now!=n+<span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">"%d "</span>,val[now]);</span><br><span class="line"><span class="keyword">if</span>(ch[now][<span class="number">1</span>]) out(ch[now][<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n+<span class="number">1</span>;i++) insert(i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;l,&amp;r);</span><br><span class="line">rvs(l,r);</span><br><span class="line">&#125;</span><br><span class="line">out(rt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init(); </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;qwq蒟蒻太蒻了a发现自己splay都不会敲了&lt;/p&gt;
&lt;p&gt;权值平衡树：（按照权值的大小来维护，左边小右边大&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="省选" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/"/>
    
    
      <category term="平衡树" scheme="www.degage.xyz/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>后缀数组性质及模板</title>
    <link href="www.degage.xyz/2019/01/18/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84%E6%80%A7%E8%B4%A8%E5%8F%8A%E6%A8%A1%E6%9D%BF/"/>
    <id>www.degage.xyz/2019/01/18/后缀数组性质及模板/</id>
    <published>2019-01-18T00:11:48.000Z</published>
    <updated>2019-01-18T00:12:59.259Z</updated>
    
    <content type="html"><![CDATA[<p>后缀数组：</p><p>suff(i):以s的第i个字符为第一个元素的后缀</p><p>后缀数组sa[i]就表示排名为i的后缀的起始位置的下标</p><p>而它的映射数组rk[i]就表示起始位置的下标为i的后缀的排名</p><p>LCP(i,j)为suff(sa[i])与suff(sa[j])的最长公共前缀</p><ol><li><p>$LCP(i,j)=LCP(j,i);$</p></li><li><p>$LCP(i,i)=len(sa[i])=n-sa[i]+1$</p><p>性质：</p><p>$LCP(i,k)=min(LCP(i,j),LCP(j,k)) 对于任意1&lt;=i&lt;=j&lt;=k&lt;=n​$</p><p>$LCP(i,k)=min(LCP(j,j-1)) 对于任意1&lt;i&lt;j&lt;=k&lt;=n$</p><p>设$pub(i)=lcp(i,i-1)$,$h(i)=pub(rk[i])=suff(i)和suff(sa[rk[i]-1])的最长公共前缀$</p><p>结论：$h(i)&gt;=h(i-1)-1$</p></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1000005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> t1[maxn],t2[maxn],c[maxn],sa[maxn],a[maxn],pub[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> *x=t1,*y=t2;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) c[x[i]=a[i]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) c[i]+=c[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--) sa[c[x[i]]--]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n-k+<span class="number">1</span>;i&lt;=n;i++) y[++num]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span>(sa[i]&gt;k) y[++num]=sa[i]-k;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) c[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) c[x[i]]++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) c[i]+=c[i<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--) sa[c[x[y[i]]]--]=y[i],y[i]=<span class="number">0</span>;<span class="comment">//y[i]表示y排名为i的下标 </span></span><br><span class="line">swap(x,y);</span><br><span class="line">num=<span class="number">1</span>;x[sa[<span class="number">1</span>]]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">x[sa[i]]=(y[sa[i]]==y[sa[i<span class="number">-1</span>]]&amp;&amp;y[sa[i]+k]==y[sa[i<span class="number">-1</span>]+k])?num:++num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(num==n) <span class="keyword">break</span>;</span><br><span class="line">m=num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>,sa[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lcp</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) rk[sa[i]]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(rk[i]==<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(k) k--;</span><br><span class="line"><span class="keyword">int</span> j=sa[rk[i]<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">while</span>(i+k&lt;=n&amp;&amp;j+k&lt;=n&amp;&amp;s[i+k]==s[j+k]) k++;</span><br><span class="line">pub[rk[i]]=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line"><span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">n=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) a[++n]=s[i];</span><br><span class="line">    solve(n,<span class="number">122</span>);</span><br><span class="line">    lcp(); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;后缀数组：&lt;/p&gt;
&lt;p&gt;suff(i):以s的第i个字符为第一个元素的后缀&lt;/p&gt;
&lt;p&gt;后缀数组sa[i]就表示排名为i的后缀的起始位置的下标&lt;/p&gt;
&lt;p&gt;而它的映射数组rk[i]就表示起始位置的下标为i的后缀的排名&lt;/p&gt;
&lt;p&gt;LCP(i,j)为suff(sa[i
      
    
    </summary>
    
      <category term="省选" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/"/>
    
    
      <category term="后缀数组" scheme="www.degage.xyz/tags/%E5%90%8E%E7%BC%80%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>生成函数预备</title>
    <link href="www.degage.xyz/2019/01/17/%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0%E9%A2%84%E5%A4%87/"/>
    <id>www.degage.xyz/2019/01/17/生成函数预备/</id>
    <published>2019-01-17T03:33:02.000Z</published>
    <updated>2019-01-17T03:43:34.369Z</updated>
    
    <content type="html"><![CDATA[<h2 id="真的就是一些杂七杂八有用没用的东西…"><a href="#真的就是一些杂七杂八有用没用的东西…" class="headerlink" title="真的就是一些杂七杂八有用没用的东西…."></a>真的就是一些杂七杂八有用没用的东西….</h2><p>生成函数:</p><p>斐波那契数列：s(n)=f(n+2)-1</p><p>设一个数列$a_0,a_1,a_2….a_n…$</p><p>则其生成函数$g(x)=\sum_{i=0}^{\infty} a_i\times x^i$</p><p>卡特兰数前7项：1, 1, 2, 5, 14, 42, 132</p><p>$C_{n+1}=C_1C_n+C_2C_{n-1}+……+C_nC_1$</p><p>通项公式$h(n)=C(2n,n)-C(2n,n-1)$</p><p>递推公式$h(n)=h(n-1)<em>(4</em>n-2)/(n+1)$</p><p>多项式的逆：</p><p>$B=2B’-AB’^2 （mod x^n)$ 最高次数n项</p><p>$A\times B \equiv 1(mod x^n)$，如遇到mod n+1项则再添一项</p><p>$A \times B’ \equiv 1(mod x^{\lfloor n/2 \rfloor})​$</p><p>$A(1)^{-1}=a[0]^{p-2}$ </p><p>卷积的定义</p><p>$(f\ast g)(n)=\int_{-\infty}^{\infty} f(i)g(n-i)di$ 连续定义</p><p>$(f\ast g)(n)=\sum_{-\infty}^{\infty} f(i)g(n-i)$离散定义</p><p>连续卷积的例子：做馒头</p><p>楼下早点铺子生意太好了，供不应求，就买了一台机器，不断的生产馒头。<br>假设馒头的生产速度是 f(t) ，那么一天后生产出来的馒头总量为： $\int_0^{24} f(t)dt$<br>馒头生产出来之后，就会慢慢腐败，假设腐败函数为 g(t) ，比如，10个馒头，24小时会腐败：$10 \ast g(t)$<br>想想就知道，第一个小时生产出来的馒头，一天后会经历24小时的腐败，第二个小时生产出来的馒头，一天后会经历23小时的腐败。<br>如此，我们可以知道，一天后，馒头总共腐败了： $\int_0^{24} f(t)g(24-t) dt$</p><p>两个多项式相乘，卷积f(i)对应其次数为i的系数(比如分治fft利用了这个思想)</p><p>多项式开根：<a href="https://www.cnblogs.com/yoyoball/p/8724115.html" target="_blank" rel="noopener">较优博文推导</a></p><p>tips:大抵推导思路就是先指数除2的同余多项式，然后通过平方相乘等来使指数恢复，从而可以用倍增将复杂度降到一半.</p><script type="math/tex; mode=display">(\frac{G^2(x)+A(x)}{2G(x)})^2\equiv A(x)(mod\ x^{2n})</script><script type="math/tex; mode=display">B(x)=(\frac{G^2(x)+A(x)}{2G(x)})^2(mod x^{2n})</script><p>泰勒公式：</p><p>定义：泰勒公式是将一个在$x=x0$处具有n阶导数的函数f(x)利用关于$(x-x0)$的n次多项式来逼近函数的方法。</p><p><img src="https://gss1.bdstatic.com/9vo3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D561/sign=143f6442fadeb48fff69a1d8c11e3aef/a686c9177f3e670920f8bbdc32c79f3df8dc551d.jpg" alt=""></p><p>等号后的多项式称为函数f(x)在x0处的泰勒展开式，剩余的Rn(x)是泰勒公式的余项，是$(x-x0)^n$的高阶无穷小。</p><p>还可以看作<img src="https://img-blog.csdn.net/20180602214026172" alt=""></p><p>常见泰勒展开：(一般取$x_0=0$得到)<br><img src="https://gss0.bdstatic.com/94o3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D240/sign=af5105143cfae6cd08b4ac653fb30f9e/4bed2e738bd4b31cbf7b70988ed6277f9e2ff84a.jpg" alt="">取$x_0=0$<br><img src="https://gss0.bdstatic.com/-4o3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D216/sign=010037de72899e517c8e3d1574a6d990/f9198618367adab47e17ff6082d4b31c8601e4ca.jpg" alt=""> 取$x_0 = 0$<br><img src="https://gss1.bdstatic.com/-vo3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D235/sign=aa5a1804763e6709ba0042fc0ec69fb8/7a899e510fb30f244f7b0820c195d143ad4b032b.jpg" alt=""><br><img src="https://gss3.bdstatic.com/7Po3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D217/sign=6137b9730533874498c5287d660fd937/b3b7d0a20cf431ad5cfca41a4236acaf2edd98e3.jpg" alt=""><br><img src="https://gss2.bdstatic.com/9fo3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D208/sign=f90c39d7be4543a9f11bfdcc26178a7b/03087bf40ad162d9b8c6853f18dfa9ec8a13cded.jpg" alt=""><br><img src="https://gss1.bdstatic.com/-vo3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D403/sign=40cad0fa3001213fcb334fdc67e636f8/9358d109b3de9c821c821dac6581800a19d8432a.jpg" alt=""></p><p>多项式除法：</p><p>$A^R(x) = x^n A(\frac{1}{x})$</p><p>反转系数（随便举个栗子就行</p><script type="math/tex; mode=display">x^n A(\frac{1}{x}) = x^{n - m}D(\frac{1}{x}) x^mB(\frac{1}{x}) + x^{n - m + 1}x^{m - 1}R(\frac{1}{x})</script><script type="math/tex; mode=display">A^R(x) = D^R(x)B^R(x) + x^{n - m + 1}R^R(x)</script><p>因为$R^R(x)$的次数大于等于n-m+1，所以$mod x^{n-m+1}$可以全部消去(次数大于它的相当于乘了个倍数)</p><p>$A^R(x) = D^R(x)B^R(x) \pmod {x^{n - m + 1}}$</p><p>多项式取模：</p><p>$A(x)\equiv R(x)\pmod{B(x)}$</p><p>就是多项式除法搞余数</p><p>牛顿迭代法：</p><p>求函数f(x)的零点</p><p>方法：选一个$x_0$将f(x)泰勒展开，选取泰勒前几项来寻找$f(x)=0$的根.</p><p>通常只保留线性部分。</p><p>$f(x)=f(x_0)+f’(x_0)(x-x0)=0$</p><p>得到：$x=x0-\frac{f(x_0)}{f’(x_0)}$</p><p>多带几个$x_0$得到近似解</p><p>多项式牛顿迭代法：</p><p>问题：<strong>求函数g(f(x))的零点多项式f(x)</strong><br>解释：g(f(x))是一个关于多项式f(x)的函数，其中f(x)是变量。<br>即求一个多项式f(x)使得</p><script type="math/tex; mode=display">g(f(x))\equiv0\pmod{x^n}</script><p>e.g.</p><script type="math/tex; mode=display">g(f(x))=lnf(x)-A(x)</script><p>这个函数的零点为eA(x)eA(x)</p><script type="math/tex; mode=display">g(f(x))=f(x)-A^k(x)</script><p>这个函数的零点即Ak(x)</p><p>多项式牛顿迭代法用来解关于多项式方程</p><p><a href="https://blog.csdn.net/semiwaker/article/details/73251486" target="_blank" rel="noopener">留坑链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;真的就是一些杂七杂八有用没用的东西…&quot;&gt;&lt;a href=&quot;#真的就是一些杂七杂八有用没用的东西…&quot; class=&quot;headerlink&quot; title=&quot;真的就是一些杂七杂八有用没用的东西….&quot;&gt;&lt;/a&gt;真的就是一些杂七杂八有用没用的东西….&lt;/h2&gt;&lt;p&gt;生成函数
      
    
    </summary>
    
      <category term="省选" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/"/>
    
    
      <category term="数学" scheme="www.degage.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>多项式板子</title>
    <link href="www.degage.xyz/2019/01/16/%E5%A4%9A%E9%A1%B9%E5%BC%8F%E6%9D%BF%E5%AD%90/"/>
    <id>www.degage.xyz/2019/01/16/多项式板子/</id>
    <published>2019-01-16T15:02:54.000Z</published>
    <updated>2019-01-17T02:46:46.738Z</updated>
    
    <content type="html"><![CDATA[<p>fft板子：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> pi=<span class="built_in">acos</span>(<span class="number">-1.0</span>);</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cp</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y;<span class="comment">//x实部y虚部 </span></span><br><span class="line">cp <span class="keyword">operator</span>+(<span class="keyword">const</span> cp &amp;a)&#123;</span><br><span class="line"><span class="keyword">return</span> (cp)&#123;x+a.x,y+a.y&#125;;</span><br><span class="line">&#125; </span><br><span class="line">cp <span class="keyword">operator</span>-(<span class="keyword">const</span> cp &amp;a)&#123;</span><br><span class="line"><span class="keyword">return</span> (cp)&#123;x-a.x,y-a.y&#125;;</span><br><span class="line">&#125;</span><br><span class="line">cp <span class="keyword">operator</span>*(<span class="keyword">const</span> cp &amp;a)&#123;</span><br><span class="line"><span class="keyword">return</span> (cp)&#123;x*a.x-y*a.y,x*a.y+y*a.x&#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">cp x1[maxn*<span class="number">3</span>],x2[maxn*<span class="number">3</span>];<span class="comment">//内存经常有不够的情况</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(cp y[],<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=len/<span class="number">2</span>;i&lt;len<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;j) swap(y[i],y[j]);</span><br><span class="line"><span class="keyword">int</span> k=len&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(j&gt;=k)&#123;</span><br><span class="line">j-=k;</span><br><span class="line">k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(j&lt;k) j+=k;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fft</span><span class="params">(cp y[],<span class="keyword">int</span> len,<span class="keyword">int</span> on)</span></span>&#123;</span><br><span class="line">change(y,len);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> h=<span class="number">2</span>;h&lt;=len;h&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">cp base=(cp)&#123;<span class="built_in">cos</span>(<span class="number">2</span>*pi/h),<span class="built_in">sin</span>(<span class="number">2</span>*pi*on/h)&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j+=h)&#123;</span><br><span class="line">cp w=(cp)&#123;<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=j;k&lt;j+h/<span class="number">2</span>;k++)&#123;</span><br><span class="line">cp t1=y[k];</span><br><span class="line">cp t2=w*y[k+h/<span class="number">2</span>];</span><br><span class="line">y[k]=t1+t2;</span><br><span class="line">y[k+h/<span class="number">2</span>]=t1-t2;</span><br><span class="line">w=w*base;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(on==<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) y[i].x/=len;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(len&lt;len1*<span class="number">2</span>||len&lt;len2*<span class="number">2</span>) len&lt;&lt;=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len1;i++) x1[i]=(cp)&#123;a[i],<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=len1;i&lt;len;i++) x1[i]=(cp)&#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len2;i++) x2[i]=(cp)&#123;b[i],<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=len2;i&lt;len;i++) x2[i]=(cp)&#123;<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">fft(x1,len,<span class="number">1</span>);</span><br><span class="line">fft(x2,len,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) x1[i]=x1[i]*x2[i];</span><br><span class="line">    fft(x1,len,<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>ntt板子:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll x1[maxn*<span class="number">3</span>],x2[maxn*<span class="number">3</span>];</span><br><span class="line"><span class="function">ll <span class="title">qkpow</span><span class="params">(ll t,<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line">ll ans=<span class="number">1</span>,base=t;</span><br><span class="line"><span class="keyword">while</span>(pos)&#123;</span><br><span class="line"><span class="keyword">if</span>(pos&amp;<span class="number">1</span>) ans=ans*base%mod;</span><br><span class="line">base=base*base%mod;</span><br><span class="line">pos&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(ll y[],<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=len/<span class="number">2</span>;i&lt;len<span class="number">-1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;j) swap(y[i],y[j]);</span><br><span class="line"><span class="keyword">int</span> k=len&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(j&gt;=k)&#123;</span><br><span class="line">j-=k;</span><br><span class="line">k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(j&lt;k) j+=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ntt</span><span class="params">(ll y[],<span class="keyword">int</span> len,<span class="keyword">int</span> on)</span></span>&#123;</span><br><span class="line">change(y,len);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> h=<span class="number">2</span>;h&lt;=len;h&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">ll base=qkpow(<span class="number">3</span>,(mod<span class="number">-1</span>)/h);<span class="comment">//改动1 </span></span><br><span class="line"><span class="keyword">if</span>(on==<span class="number">-1</span>) base=qkpow(base,mod<span class="number">-2</span>);<span class="comment">//改动2</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j+=h)&#123;</span><br><span class="line">ll w=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=j;k&lt;j+h/<span class="number">2</span>;k++)&#123;</span><br><span class="line">ll t1=y[k];</span><br><span class="line">ll t2=w*y[k+h/<span class="number">2</span>]%mod;</span><br><span class="line">y[k]=(t1+t2)%mod;</span><br><span class="line">y[k+h/<span class="number">2</span>]=(t1-t2+mod)%mod;</span><br><span class="line">w=w*base%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ll inv=qkpow(len,mod<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">if</span>(on==<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) y[i]=y[i]*inv%mod; <span class="comment">//改动3 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(len&lt;len1*<span class="number">2</span>||len&lt;len2*<span class="number">2</span>) len&lt;&lt;=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len1;i++) x1[i]=a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=len1;i&lt;len;i++) x1[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len2;i++) x2[i]=b[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=len2;i&lt;len;i++) x2[i]=<span class="number">0</span>;</span><br><span class="line">ntt(x1,len,<span class="number">1</span>);ntt(x2,len,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) x1[i]=x1[i]*x2[i];</span><br><span class="line">ntt(x1,len,<span class="number">-1</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>多项式求逆：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxlen 100005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn maxlen*3 </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line">ll a[maxn],b[<span class="number">2</span>][maxn],x1[maxn],x2[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function">ll <span class="title">qkpow</span><span class="params">(ll t,<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>,base=t;</span><br><span class="line">    <span class="keyword">while</span>(pos)&#123;</span><br><span class="line">        <span class="keyword">if</span>(pos&amp;<span class="number">1</span>) ans=ans*base%mod;</span><br><span class="line">        base=base*base%mod;</span><br><span class="line">        pos&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(ll y[],<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=len/<span class="number">2</span>;i&lt;len<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;j) swap(y[i],y[j]);</span><br><span class="line">        <span class="keyword">int</span> k=len&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(j&gt;=k)&#123;</span><br><span class="line">            j-=k;k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j&lt;k) j+=k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ntt</span><span class="params">(ll y[],<span class="keyword">int</span> len,<span class="keyword">int</span> on)</span></span>&#123;</span><br><span class="line">    change(y,len);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> h=<span class="number">2</span>;h&lt;=len;h&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">        ll base=qkpow(<span class="number">3</span>,(mod<span class="number">-1</span>)/h);<span class="comment">//改动1 </span></span><br><span class="line">        <span class="keyword">if</span>(on==<span class="number">-1</span>) base=qkpow(base,mod<span class="number">-2</span>);<span class="comment">//改动2</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j+=h)&#123;</span><br><span class="line">            ll w=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=j;k&lt;j+h/<span class="number">2</span>;k++)&#123;</span><br><span class="line">                ll t1=y[k];</span><br><span class="line">                ll t2=w*y[k+h/<span class="number">2</span>]%mod;</span><br><span class="line">                y[k]=(t1+t2)%mod;</span><br><span class="line">                y[k+h/<span class="number">2</span>]=(t1-t2+mod)%mod;</span><br><span class="line">                w=w*base%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll inv=qkpow(len,mod<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">if</span>(on==<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) y[i]=y[i]*inv%mod; <span class="comment">//改动3 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(ll a[],ll b[],<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(x1,<span class="number">0</span>,<span class="keyword">sizeof</span>(x1));</span><br><span class="line">    <span class="built_in">memset</span>(x2,<span class="number">0</span>,<span class="keyword">sizeof</span>(x2));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len/<span class="number">2</span>;i++)&#123;</span><br><span class="line">        x1[i]=a[i];x2[i]=b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ntt(x1,len,<span class="number">1</span>);ntt(x2,len,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) x1[i]=x2[i]*x1[i]%mod;</span><br><span class="line">    ntt(x1,len,<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) a[i]=x1[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">int</span> cur=<span class="number">0</span>;</span><br><span class="line">    b[cur][<span class="number">0</span>]=qkpow(a[<span class="number">0</span>],mod<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">int</span> bas=<span class="number">1</span>,len=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(bas&lt;=(n&lt;&lt;<span class="number">1</span>))&#123;</span><br><span class="line">        cur^=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">memset</span>(b[cur],<span class="number">0</span>,<span class="keyword">sizeof</span>(b[cur]));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bas;i++) b[cur][i]=(b[cur][i]+b[cur^<span class="number">1</span>][i]*<span class="number">2l</span>l)%mod;</span><br><span class="line">        mul(b[cur^<span class="number">1</span>],b[cur^<span class="number">1</span>],len);</span><br><span class="line">        mul(b[cur^<span class="number">1</span>],a,len);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bas;i++) b[cur][i]=(b[cur][i]-b[cur^<span class="number">1</span>][i]+mod)%mod;</span><br><span class="line">        bas&lt;&lt;=<span class="number">1</span>;len&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">printf</span>(<span class="string">"%lld "</span>,b[cur][i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多项式除法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxlen 100005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn maxlen*3</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">ll f[maxn],g[maxn],d[maxn],r[maxn],gr[maxn],fr[maxn],t[<span class="number">2</span>][maxn],x1[maxn],x2[maxn];</span><br><span class="line"><span class="function">ll <span class="title">qkpow</span><span class="params">(ll t,<span class="keyword">int</span> pos)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>,base=t;</span><br><span class="line">    <span class="keyword">while</span>(pos)&#123;</span><br><span class="line">        <span class="keyword">if</span>(pos&amp;<span class="number">1</span>) ans=ans*base%mod;</span><br><span class="line">        base=base*base%mod;</span><br><span class="line">        pos&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(ll y[],<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=len/<span class="number">2</span>;i&lt;len<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;j) swap(y[i],y[j]);</span><br><span class="line">        <span class="keyword">int</span> k=len&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(j&gt;=k)&#123;</span><br><span class="line">            j-=k;k&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j&lt;k) j+=k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ntt</span><span class="params">(ll y[],<span class="keyword">int</span> len,<span class="keyword">int</span> on)</span></span>&#123;</span><br><span class="line">    change(y,len);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> h=<span class="number">2</span>;h&lt;=len;h&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">        ll base=qkpow(<span class="number">3</span>,(mod<span class="number">-1</span>)/h);<span class="comment">//改动1 </span></span><br><span class="line">        <span class="keyword">if</span>(on==<span class="number">-1</span>) base=qkpow(base,mod<span class="number">-2</span>);<span class="comment">//改动2</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j+=h)&#123;</span><br><span class="line">            ll w=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=j;k&lt;j+h/<span class="number">2</span>;k++)&#123;</span><br><span class="line">                ll t1=y[k];</span><br><span class="line">                ll t2=w*y[k+h/<span class="number">2</span>]%mod;</span><br><span class="line">                y[k]=(t1+t2)%mod;</span><br><span class="line">                y[k+h/<span class="number">2</span>]=(t1-t2+mod)%mod;</span><br><span class="line">                w=w*base%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll inv=qkpow(len,mod<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">if</span>(on==<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) y[i]=y[i]*inv%mod; <span class="comment">//改动3 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mul</span><span class="params">(ll a[],ll b[],<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(x1,<span class="number">0</span>,<span class="keyword">sizeof</span>(x1));</span><br><span class="line">    <span class="built_in">memset</span>(x2,<span class="number">0</span>,<span class="keyword">sizeof</span>(x2));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len/<span class="number">2</span>;i++)&#123;</span><br><span class="line">        x1[i]=a[i];x2[i]=b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    ntt(x1,len,<span class="number">1</span>);ntt(x2,len,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) x1[i]=x2[i]*x1[i]%mod;</span><br><span class="line">    ntt(x1,len,<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) a[i]=x1[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mull</span><span class="params">(ll a[],ll b[],<span class="keyword">int</span> len1)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(len&lt;len1*<span class="number">2</span>) len&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">memset</span>(x1,<span class="number">0</span>,<span class="keyword">sizeof</span>(x1));</span><br><span class="line">    <span class="built_in">memset</span>(x2,<span class="number">0</span>,<span class="keyword">sizeof</span>(x2));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len1;i++) x1[i]=a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len1;i++) x2[i]=b[i];</span><br><span class="line">    ntt(x1,len,<span class="number">1</span>);ntt(x2,len,<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) x1[i]=x2[i]*x1[i]%mod;</span><br><span class="line">    ntt(x1,len,<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++) a[i]=x1[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cur;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inv</span><span class="params">(ll a[],<span class="keyword">int</span> tot)</span></span>&#123;</span><br><span class="line">    cur=<span class="number">0</span>;</span><br><span class="line">    t[cur][<span class="number">0</span>]=qkpow(a[<span class="number">0</span>],mod<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">int</span> bas=<span class="number">1</span>,len=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span>(bas&lt;=(tot&lt;&lt;<span class="number">1</span>))&#123;</span><br><span class="line">        cur^=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">memset</span>(t[cur],<span class="number">0</span>,<span class="keyword">sizeof</span>(t[cur]));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bas;i++) t[cur][i]=(t[cur][i]+t[cur^<span class="number">1</span>][i]*<span class="number">2l</span>l)%mod;</span><br><span class="line">        mul(t[cur^<span class="number">1</span>],t[cur^<span class="number">1</span>],len);</span><br><span class="line">        mul(t[cur^<span class="number">1</span>],a,len);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;bas;i++) t[cur][i]=(t[cur][i]-t[cur^<span class="number">1</span>][i]+mod)%mod;</span><br><span class="line">        bas&lt;&lt;=<span class="number">1</span>;len&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;f[i]),fr[n-i]=f[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;g[i]),gr[m-i]=g[i];</span><br><span class="line">    inv(gr,n-m+<span class="number">1</span>);<span class="comment">//t[cur]现在为gr的逆元 </span></span><br><span class="line">    mull(fr,t[cur],n+<span class="number">1</span>);<span class="comment">//fr变为dr</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n-m;i++) d[i]=fr[n-m-i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n-m;i++) <span class="built_in">printf</span>(<span class="string">"%lld "</span>,d[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    mull(d,g,n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++) r[i]=(f[i]-d[i]+mod)%mod;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m<span class="number">-1</span>;i++) <span class="built_in">printf</span>(<span class="string">"%lld "</span>,r[i]);   </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    init();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;fft板子：&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;
      
    
    </summary>
    
      <category term="省选" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/"/>
    
    
      <category term="多项式" scheme="www.degage.xyz/tags/%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
    
      <category term="ntt" scheme="www.degage.xyz/tags/ntt/"/>
    
      <category term="fft" scheme="www.degage.xyz/tags/fft/"/>
    
  </entry>
  
  <entry>
    <title>终</title>
    <link href="www.degage.xyz/2019/01/16/d1t1/"/>
    <id>www.degage.xyz/2019/01/16/d1t1/</id>
    <published>2019-01-16T14:18:14.000Z</published>
    <updated>2019-01-16T15:03:32.222Z</updated>
    
    <content type="html"><![CDATA[<p>首先题目中的贡献式子</p><script type="math/tex; mode=display">\frac{(A_i - A_j)B_iB_j}{2A_iA_j}</script><p>化简得$\frac{1}{2}(B_i\frac{B_j}{A_j}-B_j\frac{B_i}{A_i})$</p><p>发现可以看成一个向量叉积，转成面积，再观察题目中的特殊性质$B_i$先单调不降，再单调不增，看上去就联想到做一个凸包，使得面积最大（权值越大，得解</p><p>code:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100010</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span>&#123;</span></span><br><span class="line"><span class="keyword">double</span> x,y;</span><br><span class="line">point <span class="keyword">operator</span>-(<span class="keyword">const</span> point &amp;a)&#123;</span><br><span class="line"><span class="keyword">return</span> (point)&#123;x-a.x,y-a.y&#125;;</span><br><span class="line">&#125;</span><br><span class="line">point <span class="keyword">operator</span>+(<span class="keyword">const</span> point &amp;a)&#123;</span><br><span class="line"><span class="keyword">return</span> (point)&#123;x+a.x,y+a.y&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(point a,point b)&#123;</span><br><span class="line"><span class="keyword">return</span> a.x&lt;b.x||(a.x==b.x&amp;&amp;a.y&lt;b.y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;p[maxn],st[maxn];</span><br><span class="line"><span class="keyword">double</span> <span class="keyword">operator</span>^(point a,point b)&#123;</span><br><span class="line"><span class="keyword">return</span> a.x*b.y-b.x*a.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dist</span><span class="params">(point a,point b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,a[maxn],b[maxn];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">calc</span><span class="params">(point a,point b,point c)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (b-a)^(c-a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]),b[i]=(sum+=a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">   p[i]=(point)&#123;(<span class="keyword">double</span>)b[i],(<span class="keyword">double</span>)b[i]*<span class="number">1.0</span>/(<span class="keyword">double</span>)a[i]&#125;;</span><br><span class="line">&#125;</span><br><span class="line">sort(p+<span class="number">1</span>,p+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> top=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">while</span>(top&gt;<span class="number">1</span>&amp;&amp;calc(st[top<span class="number">-1</span>],st[top],p[i])&lt;=<span class="number">0</span>) top--;<span class="comment">//保证了单调性 后面=0的肯定比前面长 </span></span><br><span class="line">st[++top]=p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> tmp=top;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line"><span class="keyword">while</span>(top&gt;tmp&amp;&amp;calc(st[top<span class="number">-1</span>],st[top],p[i])&lt;=<span class="number">0</span>) top--;</span><br><span class="line">st[++top]=p[i]; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=top;i++)&#123;</span><br><span class="line">ans+=(st[i<span class="number">-1</span>]^st[i])/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.5f"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先题目中的贡献式子&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{(A_i - A_j)B_iB_j}{2A_iA_j}&lt;/script&gt;&lt;p&gt;化简得$\frac{1}{2}(B_i\frac{B_j}{A_j}-B_j\
      
    
    </summary>
    
      <category term="省选" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/"/>
    
    
      <category term="计算几何" scheme="www.degage.xyz/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>计算几何初步</title>
    <link href="www.degage.xyz/2019/01/15/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E5%88%9D%E6%AD%A5/"/>
    <id>www.degage.xyz/2019/01/15/计算几何初步/</id>
    <published>2019-01-15T06:15:14.000Z</published>
    <updated>2019-01-16T13:29:24.274Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span>&#123;</span></span><br><span class="line">  <span class="keyword">double</span> x,<span class="keyword">double</span> y;</span><br><span class="line">  <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> point &amp;a,<span class="keyword">const</span> point &amp;b)&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x&lt;b.x||a.x==b.x&amp;&amp;a.y&lt;b.y;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用点积求夹角：$acos(dot(a,b)/len(a)/len(b))$</p><p>叉积：$T=\vec{a} \times \vec{b}=-\vec{b} \times \vec{a} =X_aY_b-X_bY_a=\vline \vec{a} \vline \vline \vec{b} \vline sin(vec{a},vec{b})$</p><p>方向用右手定则判断，垂直平面</p><p>T=0: 两向量共线或反向<br>T&gt;0:b在a左侧<br>T&lt;0:b在a右侧<br><img src="https://i.loli.net/2019/01/15/5c3d307ad09be.png" alt=""></p><p>两向量所构平行四边形面积为叉积</p><p>旋转:<br>向量(x,y)绕坐标原点逆时针旋转$\theta$度<br>（用三垂直定理）</p><script type="math/tex; mode=display">x'=xcos\theta-ysin\theta</script><script type="math/tex; mode=display">y'=xsin\theta+ycos\theta</script><p>tips:<br>在读入时对每个点进行微小扰动<br>point a=(point){x+eps(),y+eps()};<br>或point a=rotate(a,1e-7)<br>以避免出现斜率不存在的情况</p><p>数据存储<br>1.直线/线段：斜截式或一般式<br>$Ax + By + C = 0 or y = kx + b$<br>2.圆：圆⼼坐标，圆的半径<br>$(x − a)^2 + (y − b)^2 = r2$<br>3.多边形：多边形上所有点坐标（推荐使用逆时针）<br>4.半平面：<br>$Ax + By + C ≥ 0$</p><p>公式定理：<br>1.正弦定理：AAS/ASA解三角形<br>2.余弦定理：SAS/SSS解三角形<br>3.质⼼：点集的加权平均数，就是好⼏个杠杆原理<br>$x_0=\frac{1}{N}\sum_{i=1}^N x_im_i,y_0=\frac{1}{N}\sum_{i=1}^N y_im_i$<br>三角形质⼼：中线交点<br>四边形质⼼：两个三角形质⼼的质⼼，权重为三角形面积<br>定比分点：杠杆原理坐标化<br>4.三角形面积:正弦定理，叉积，海伦公式:$p = (a + b + c)/2; S = \sqrt{p(p − a)(p − b)(p− c)}$</p><p>应用：<br>1.判折线段的拐向 a,b,c $\vec{ab} \times \vec{bc}$ 叉积大于0则左拐，否则右拐<br>2.判断点是否在线段上: a,b,c </p><p>（忘了按保存键就先咕咕咕了2333</p><p>C 语言里 double atan2(double y,double x) 返回的是原点至点(x,y)的方位角，即与 x 轴的夹角。</p><p>取值范围为 <img src="https://gss0.bdstatic.com/-4o3dSag_xI4khGkpoWK1HF6hhy/baike/s%3D47/sign=f817c2ad06e9390152028c3979ec2ec3/dcc451da81cb39db32331ddbd7160924aa18304f.jpg" alt="img"> ；</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//得到两直线相交的交点</span></span><br><span class="line"><span class="function">point <span class="title">getpoint</span><span class="params">(line a,line b)</span></span>&#123;</span><br><span class="line"> point aa=a.e-a.s,bb=b.e-b.s,cc=b.s-a.s;</span><br><span class="line">   <span class="keyword">double</span> t=(bb^cc)/(aa^bb);</span><br><span class="line">   <span class="keyword">return</span> (point)&#123;a.s+aa*t&#125;; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;
      
    
    </summary>
    
      <category term="省选" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/"/>
    
    
      <category term="计算几何" scheme="www.degage.xyz/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>马拉车算法</title>
    <link href="www.degage.xyz/2019/01/13/%E9%A9%AC%E6%8B%89%E8%BD%A6/"/>
    <id>www.degage.xyz/2019/01/13/马拉车/</id>
    <published>2019-01-13T07:49:38.000Z</published>
    <updated>2019-01-16T13:29:31.432Z</updated>
    
    <content type="html"><![CDATA[<p>马拉车算法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">init</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n=<span class="built_in">strlen</span>(str);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,j=<span class="number">0</span>;i&lt;=<span class="number">2</span>*n;j++,i+=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i]=<span class="string">'#'</span>;</span><br><span class="line">        s[i+<span class="number">1</span>]=str[j];</span><br><span class="line">    &#125;</span><br><span class="line">    s[<span class="number">0</span>]=<span class="string">'$'</span>;</span><br><span class="line">    s[<span class="number">2</span>*n+<span class="number">1</span>]=<span class="string">'#'</span>;</span><br><span class="line">    s[<span class="number">2</span>*n+<span class="number">2</span>]=<span class="string">'@'</span>;</span><br><span class="line">    s[<span class="number">2</span>*n+<span class="number">3</span>]=<span class="string">'\n'</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>*n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">manacher</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mx=<span class="number">0</span>,p=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(mx&gt;i)len[i]=min(mx-i,len[<span class="number">2</span>*p-i]);</span><br><span class="line">        <span class="keyword">else</span> len[i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(s[i-len[i]]==s[i+len[i]])len[i]++;</span><br><span class="line">        <span class="keyword">if</span>(len[i]+i&gt;mx)mx=len[i]+i,p=i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;马拉车算法&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;
      
    
    </summary>
    
      <category term="省选" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/"/>
    
    
      <category term="马拉车算法" scheme="www.degage.xyz/tags/%E9%A9%AC%E6%8B%89%E8%BD%A6%E7%AE%97%E6%B3%95/"/>
    
      <category term="字符串" scheme="www.degage.xyz/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>莫比乌斯反演未整理</title>
    <link href="www.degage.xyz/2019/01/02/58/"/>
    <id>www.degage.xyz/2019/01/02/58/</id>
    <published>2019-01-02T15:07:13.000Z</published>
    <updated>2019-01-16T13:29:00.580Z</updated>
    
    <content type="html"><![CDATA[<p>$\sigma(p^k)=k+1$<br>$phi(p^k)=p^{k-1}\times(p-1)$<br>$(phi\star1)(p^k)=p^k$</p><p>证明：</p><p>$1(i)=1$</p><p>$(phi\star1)(n)=\sum_{i|n}(phi(i)\times 1)$<br>$(phi\star1)(p^k)=(phi)(1)+(phi)(p^1)+….+(phi)(p^k)$<br>套公式$phi(p^k)=p^{k-1}\times(p-1)$<br>化为$(p-1)\times(p^0+p^1+…+p^{k-1})=p^k$</p><p>由于$(phi\star1)(p^k)$是积性函数，所以$phi\star1=id$</p><p>莫比乌斯反演：</p><p>定义<strong>1</strong>的逆是$\mu​$（莫比乌斯函数）</p><p>如果$g=f\star1$，就有$f=f\ \star 1\ \star\mu=g\ \star\mu$</p><p>所以$g(n)=\sum_{d|n}f(d)$则$f(n)=\sum_{d|n}g(d)\times\mu(n/d)$ （莫比乌斯反演定理）</p><p>另一个方向：$g(n)=\sum_{n|d}f(d)$ 则$f(n)=\sum_{n|d}g(d)\times \mu(d/n)$  其中d的取值范围为f的定义域</p><script type="math/tex; mode=display">\mu(n)=(-1)^{t}</script><p>当 <script type="math/tex">n=p_1\times p_2\times ...\times p_t且p_i各不相同</script></p><script type="math/tex; mode=display">else  \mu(i)=0</script><p>结论： $phi=\mu \star id$  </p><p>莫比乌斯函数常用的两个性质：</p><ul><li>对于任意正整数$n$，$\sum_{d|n}\mu(d)=[n=1]$。（$[n=1]$表示只有当$n=1$成立时，返回值为1；否则，值为0；(这个就是用μ是容斥系数的性质可以证明)<strong>(PS:这一条性质是莫比乌斯反演中最常用的)</strong></li><li>对于任意正整数n，$\sum_{d|n}\frac{\mu(d)}{d}=\frac{\phi(n)}{n}$。（这个性质很奇妙，它把欧拉函数和莫比乌斯函数结合起来）</li></ul><p>整除分块：</p><ul><li>对于每一个$\lfloor\frac{n}{i}\rfloor$我们可以通过打表<del>(或理性的证明)</del>可以发现：有许多$\lfloor\frac{n}{i}\rfloor$的值是一样的，而且它们呈一个块状分布；再通过打表之类的各种方法,我们惊喜的发现对于每一个值相同的块，它的最后一个数就是$n/(n/i)$。得出这个结论后，我们就可以做的$O(\sqrt{n})$处理了。<br>附一个整除分块的代码吧：</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>,r;l&lt;=n;l=r+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    r=n/(n/l);</span><br><span class="line">    ans+=(r-l+<span class="number">1</span>)\star(n/l);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_mu</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mu[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])&#123;prim[++cnt]=i;mu[i]=<span class="number">-1</span>;&#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt&amp;&amp;prim[j]\stari&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[prim[j]\stari]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prim[j]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">else</span> mu[i\starprim[j]]=-mu[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;$\sigma(p^k)=k+1$&lt;br&gt;$phi(p^k)=p^{k-1}\times(p-1)$&lt;br&gt;$(phi\star1)(p^k)=p^k$&lt;/p&gt;
&lt;p&gt;证明：&lt;/p&gt;
&lt;p&gt;$1(i)=1$&lt;/p&gt;
&lt;p&gt;$(phi\star1)(n)=\sum_{i|n}
      
    
    </summary>
    
      <category term="省选" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/"/>
    
    
      <category term="数学" scheme="www.degage.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>祎隋</title>
    <link href="www.degage.xyz/2019/01/02/57/"/>
    <id>www.degage.xyz/2019/01/02/57/</id>
    <published>2019-01-02T15:07:03.000Z</published>
    <updated>2019-01-16T13:29:33.892Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我愿…"><a href="#我愿…" class="headerlink" title="我愿…"></a>我愿…</h2><p><font face="等线">《祎隋》</font>&lt;/br&gt;  </p><p><font face="等线">我愿意是歌声不成形体</font>&lt;/br&gt;    </p><p><font face="等线">又发自于你</font> &lt;/br&gt;   </p><p><font face="等线">轻托你的灵动美丽</font>&lt;/br&gt;    </p><p><font face="等线">我愿意是烟火转瞬即逝</font>&lt;/br&gt;    </p><p><font face="等线">又引你一视</font>&lt;/br&gt;    </p><p><font face="等线">映亮你的天真欣喜</font>&lt;/br&gt;    </p><p><font face="等线">我愿意是微风不被注意</font>&lt;/br&gt;    </p><p><font face="等线">又轻拂着你</font>&lt;/br&gt;    </p><p><font face="等线">飘扬你的醉人芳香</font>&lt;/br&gt;    </p><p><font face="等线">我愿意是皎月独凌寒处</font>&lt;/br&gt;    </p><p><font face="等线">又照你一世</font>&lt;/br&gt;   </p><p><font face="等线">平稳你的夜夜美梦</font>&lt;/br&gt;   </p><p><font face="等线">我愿意是时光静默流淌</font> &lt;/br&gt;  </p><p><font face="等线">又伴你一生</font>&lt;/br&gt;    </p><p><font face="等线">承载你的所有过往</font>&lt;/br&gt;    </p><p><img src="https://i.loli.net/2019/01/02/5c2cd3d567883.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;我愿…&quot;&gt;&lt;a href=&quot;#我愿…&quot; class=&quot;headerlink&quot; title=&quot;我愿…&quot;&gt;&lt;/a&gt;我愿…&lt;/h2&gt;&lt;p&gt;&lt;font face=&quot;等线&quot;&gt;《祎隋》&lt;/font&gt;&amp;lt;/br&amp;gt;  &lt;/p&gt;
&lt;p&gt;&lt;font face=&quot;等线&quot;&gt;我愿
      
    
    </summary>
    
      <category term="杂诗" scheme="www.degage.xyz/categories/%E6%9D%82%E8%AF%97/"/>
    
    
      <category term="杂诗" scheme="www.degage.xyz/tags/%E6%9D%82%E8%AF%97/"/>
    
  </entry>
  
  <entry>
    <title>网络流</title>
    <link href="www.degage.xyz/2018/12/16/56/"/>
    <id>www.degage.xyz/2018/12/16/56/</id>
    <published>2018-12-16T15:18:54.000Z</published>
    <updated>2019-01-16T13:28:53.474Z</updated>
    
    <content type="html"><![CDATA[<p>首先主要是关于退流的理解，仔细理解这张图：<br><img src="https://i.loli.net/2018/12/16/5c166eaf19395.png" alt=""></p><p>然后上模板：<br>最大流<br>(1)EK:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 205</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxm 2005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,x,y,z;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">eage</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> from,to,next,cap,flow;</span><br><span class="line">&#125;e[maxm&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> first[maxn],np=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">e[++np]=(eage)&#123;u,v,first[u],c,<span class="number">0</span>&#125;;</span><br><span class="line">first[u]=np;</span><br><span class="line">e[++np]=(eage)&#123;v,u,first[v],<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">first[v]=np;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">int</span> a[maxn],fa[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">other</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> i&amp;<span class="number">1</span>?i+<span class="number">1</span>:i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">a[s]=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">fa[s]=<span class="number">0</span>;</span><br><span class="line">q.push(s);</span><br><span class="line"><span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line"><span class="keyword">int</span> i=q.front();q.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=first[i];p;p=e[p].next)&#123;</span><br><span class="line"><span class="keyword">int</span> j=e[p].to;</span><br><span class="line"><span class="keyword">if</span>(!a[j]&amp;&amp;e[p].cap&gt;e[p].flow)&#123;</span><br><span class="line">a[j]=min(a[i],e[p].cap-e[p].flow);</span><br><span class="line">fa[j]=p;</span><br><span class="line">q.push(j);</span><br><span class="line"><span class="keyword">if</span>(j==t) <span class="keyword">return</span> a[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//如果没有找到任意一条 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> maxflow=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> del=bfs(<span class="number">1</span>,n);</span><br><span class="line"><span class="keyword">if</span>(del==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">maxflow+=del;</span><br><span class="line"><span class="keyword">int</span> f=fa[n];</span><br><span class="line"><span class="keyword">while</span>(f)&#123;</span><br><span class="line">e[f].flow+=del;</span><br><span class="line">e[other(f)].flow-=del;</span><br><span class="line">f=fa[e[f].from];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> maxflow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line"> add(x,y,z);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%d"</span>,ek());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>(2)Dinic<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 205</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxm 2005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">eage</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> from,to,next,cap,flow;</span><br><span class="line">&#125;e[maxm&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> first[maxn],np=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">e[++np]=(eage)&#123;u,v,first[u],c,<span class="number">0</span>&#125;;</span><br><span class="line">first[u]=np;</span><br><span class="line">e[++np]=(eage)&#123;v,u,first[v],<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">first[v]=np;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,x,y,z,s,t;</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">other</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> i&amp;<span class="number">1</span>?i+<span class="number">1</span>:i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> mn)</span></span>&#123;</span><br><span class="line">vis[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i==t) <span class="keyword">return</span> mn;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=first[i];p;p=e[p].next)&#123;</span><br><span class="line"><span class="keyword">int</span> j=e[p].to;</span><br><span class="line"><span class="keyword">int</span> dis=e[p].cap-e[p].flow;</span><br><span class="line"><span class="keyword">if</span>(vis[j]||dis==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> del=dfs(j,min(mn,dis));</span><br><span class="line"><span class="keyword">if</span>(del==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">e[p].flow+=del;</span><br><span class="line">e[other(p)].flow-=del;</span><br><span class="line"><span class="keyword">return</span> del; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxflow=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">int</span> del=dfs(s,inf);</span><br><span class="line"><span class="keyword">if</span>(del==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">maxflow+=del;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> maxflow;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line">s=<span class="number">1</span>,t=n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">add(x,y,z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,ek());</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>费用流:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 305</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxm 3005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">eage</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> from,to,next,cap,flow,w;</span><br><span class="line">&#125;e[maxm&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> first[maxn],np=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> c,<span class="keyword">int</span> w)</span></span>&#123;</span><br><span class="line">e[++np]=(eage)&#123;u,v,first[u],c,<span class="number">0</span>,w&#125;;</span><br><span class="line">first[u]=np;</span><br><span class="line">e[++np]=(eage)&#123;v,u,first[v],<span class="number">0</span>,<span class="number">0</span>,-w&#125;;</span><br><span class="line">first[v]=np;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">other</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> i&amp;<span class="number">1</span>?i+<span class="number">1</span>:i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,x,y,z,w,dist[maxn],a[maxn],fa[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">spfa</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    a[<span class="number">1</span>]=inf;</span><br><span class="line">    fa[<span class="number">1</span>]=<span class="number">0</span>;q.push(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">memset</span>(dist,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(dist));</span><br><span class="line">    dist[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">    <span class="keyword">int</span> i=q.front();q.pop();</span><br><span class="line">    vis[i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> p=first[i];p;p=e[p].next)&#123;</span><br><span class="line">    <span class="keyword">int</span> j=e[p].to;</span><br><span class="line">    <span class="keyword">if</span>(e[p].cap&gt;e[p].flow)</span><br><span class="line">    <span class="keyword">if</span>(dist[j]&gt;dist[i]+e[p].w)&#123;</span><br><span class="line">    dist[j]=dist[i]+e[p].w;</span><br><span class="line">    a[j]=min(a[i],e[p].cap-e[p].flow);</span><br><span class="line">    fa[j]=p;</span><br><span class="line">    <span class="keyword">if</span>(!vis[j]) q.push(j),vis[j]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ek</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> maxflow=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> cost=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(spfa())&#123;</span><br><span class="line">maxflow+=a[n];</span><br><span class="line">cost+=dist[n]*a[n];</span><br><span class="line"><span class="keyword">int</span> f=fa[n];</span><br><span class="line"><span class="keyword">while</span>(f)&#123;</span><br><span class="line">e[f].flow+=a[n];</span><br><span class="line">e[other(f)].flow-=a[n];</span><br><span class="line">f=fa[e[f].from];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d"</span>,maxflow,cost);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;x,&amp;y,&amp;z,&amp;w);</span><br><span class="line">add(x,y,z,w);</span><br><span class="line">&#125;</span><br><span class="line">ek();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>二分图:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 405</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxm 40005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">eage</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> from,to,next,cap,flow;</span><br><span class="line">&#125;e[maxm&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> first[maxn],np=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">e[++np]=(eage)&#123;u,v,first[u],c,<span class="number">0</span>&#125;;</span><br><span class="line">first[u]=np;</span><br><span class="line">e[++np]=(eage)&#123;v,u,first[v],<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line">first[v]=np;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">other</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> i&amp;<span class="number">1</span>?i+<span class="number">1</span>:i<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,x,y,s,t;</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> mn)</span></span>&#123;</span><br><span class="line">vis[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i==t) <span class="keyword">return</span> mn;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=first[i];p;p=e[p].next)&#123;</span><br><span class="line"><span class="keyword">int</span> j=e[p].to,dis=e[p].cap-e[p].flow;</span><br><span class="line"><span class="keyword">if</span>(vis[j]||dis==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">    <span class="keyword">int</span> del=dfs(j,min(mn,dis));</span><br><span class="line">    <span class="keyword">if</span>(del==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">    e[p].flow+=del;</span><br><span class="line">    e[other(p)].flow-=del;</span><br><span class="line">    <span class="keyword">return</span> del;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ek</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> maxflow=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">int</span> del=dfs(s,inf);</span><br><span class="line">    <span class="keyword">if</span>(del==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">    maxflow+=del; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,maxflow);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">s=<span class="number">401</span>,t=<span class="number">402</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;y);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=y;j++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">add(i,x+n,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">add(s,i,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) add(i+n,t,<span class="number">1</span>);<span class="comment">//最多只出去一个，保证两边不连到一个点上 </span></span><br><span class="line">ek();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先主要是关于退流的理解，仔细理解这张图：&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2018/12/16/5c166eaf19395.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后上模板：&lt;br&gt;最大流&lt;br&gt;(1)EK:&lt;br&gt;&lt;figure cla
      
    
    </summary>
    
      <category term="省选" scheme="www.degage.xyz/categories/%E7%9C%81%E9%80%89/"/>
    
    
      <category term="网络流" scheme="www.degage.xyz/tags/%E7%BD%91%E7%BB%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>划分物品</title>
    <link href="www.degage.xyz/2018/11/08/55/"/>
    <id>www.degage.xyz/2018/11/08/55/</id>
    <published>2018-11-08T08:33:39.000Z</published>
    <updated>2019-01-16T13:28:49.312Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>你有 n 个物品，第 i 个物品的重量是$w_i$。</p><p>你需要把这些物品划分成若干组，满足每一组的重量和都是质数。</p><p>两个方案是不同的当且仅当存在两个物品 i 和 j，在第一个方案里他们处在同一组，第二个方案里他们不处在同一组。（对998244353取模）</p><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><p>$n&lt;=16,w_i&lt;=100$</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>10<br>2 3 4 5 6 7 8 9 10 11</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>1177</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>一道经典的状压dp题，我们可以用$sum_i$来表示状态为i的集合所表示的重量和(类似思路也可以搞其他的)设$dp_i$表示状态为i的集合所能容纳的方案数，那么$dp_i=\sum_{(j属于i且j为素数)}dp_{i-j}$。显然这样是不正确的，因为有重复的，所以我们便固定一个x属于i，然后可以正确dp。</p><p>上代码:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxv 1605</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">998244353</span>;</span><br><span class="line">ll dp[<span class="number">1</span>&lt;&lt;<span class="number">18</span>];</span><br><span class="line"><span class="keyword">int</span> sum[<span class="number">1</span>&lt;&lt;<span class="number">18</span>];</span><br><span class="line"><span class="keyword">int</span> n,w[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">bool</span> vis[maxv];</span><br><span class="line"><span class="keyword">int</span> prime[maxv&gt;&gt;<span class="number">1</span>],top=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ready</span><span class="params">()</span></span>&#123;</span><br><span class="line">vis[<span class="number">0</span>]=vis[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=maxv<span class="number">-5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[i]) prime[++top]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=top&amp;&amp;prime[j]*i&lt;=maxv<span class="number">-5</span>;j++)&#123;</span><br><span class="line">vis[prime[j]*i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> all=(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[i]);sum[<span class="number">1</span>&lt;&lt;i<span class="number">-1</span>]=w[i];</span><br><span class="line">&#125;</span><br><span class="line">dp[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=all;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>((i|(<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>))!=i) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>((<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>)==i) <span class="keyword">continue</span>;</span><br><span class="line">sum[i]=sum[i-(<span class="number">1</span>&lt;&lt;j<span class="number">-1</span>)]+w[j];<span class="comment">//可用如此方式来记录每个状态代表的值 </span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=all;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> x=i&amp;(-i);<span class="comment">//固定一个 注意i&amp;-i的值是1&lt;&lt;后的 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i;j;j=i&amp;(j<span class="number">-1</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>((x|j)!=j) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(vis[sum[j]]) <span class="keyword">continue</span>;</span><br><span class="line">dp[i]=(dp[i]+dp[i-j])%mod;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,dp[all]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ready();</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;你有 n 个物品，第 i 个物品的重量是$w_i$。&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="dp" scheme="www.degage.xyz/tags/dp/"/>
    
  </entry>
  
  <entry>
    <title>计数</title>
    <link href="www.degage.xyz/2018/11/07/54/"/>
    <id>www.degage.xyz/2018/11/07/54/</id>
    <published>2018-11-07T13:04:13.000Z</published>
    <updated>2019-01-16T13:28:45.547Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>既然是萌萌哒 visit_world 的比赛，那必然会有一道计数题啦！<br>考虑一个N个节点的二叉树，它的节点被标上了$1-N$的编号. 并且，编号为i的节点在二叉树的前序遍历中恰好是第i个出现.<br>我们定义$A_i$表示编号为i的点在二叉树的中序遍历中出现的位置.<br>现在，给出m个限制条件，第i个限制条件给出了$u_i,v_i$,表示$A_{u_i}&lt;A_{v_i}$，也即中序遍历中$u_i$在$v_i$之前出现.<br>你需要计算有多少种不同的带标号二叉树满足上述全部限制条件，答案对$1e9+7$取模.</p><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><p>$T&lt;=5,N&lt;=400,M&lt;=10^3$</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>3 5<br>0<br>3 2<br>1 2<br>2 3<br>3 3<br>1 2<br>2 3<br>3 1</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>42<br>1<br>0</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先M=0可以看出是个卡特兰数。<br>然后我们知道先序遍历，根据其特性来枚举出合法的中序遍历，每次找到一个根，枚举它左边有多少个，右边有多少个，然后判断是否合法，合法的话方案数乘起来累加。<br>见图：<br><img src="https://i.loli.net/2018/11/07/5be3017335edf.png" alt=""><br>首先枚举后有三个大小关系：根的中序遍历大于任意左子树的，任意右子树的大于根的，任意右子树的大于左子树的。<br>然后发现check是$n^2$的，而dp又是$n^3$的，这样就$n^5$了，<font color="red">这里有个很nice的思路</font>，用二维前缀和优化，如果要求i的中序遍历小于j的，那么$a[i][j]=1$，然后sum求一波二维前缀和，对于$sum[i][j]$其含义便是1-i中小于1-j中的个数和，那么我们询问$[l1,r1]小于[l2,r2]$就为$sum[r1,r2]-sum[l1-1,r2]-sum[r1,l2-1]+sum[l1-1,l2-1]$然后就优化成$O(1)$的check了，整体复杂度就被优化至了$O(n^3)$，真的TQL%%%</p><p>上代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 405</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn][maxn],n,t,m,x,y,sum[maxn][maxn];</span><br><span class="line">ll dp[maxn][maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> l1,<span class="keyword">int</span> r1,<span class="keyword">int</span> l2,<span class="keyword">int</span> r2)</span></span>&#123;<span class="comment">//如果返回值说l1~r1有小于l2~r2的 </span></span><br><span class="line">    <span class="keyword">return</span> sum[r1][r2]-sum[l1<span class="number">-1</span>][r2]-sum[r1][l2<span class="number">-1</span>]+sum[l1<span class="number">-1</span>][l2<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> l1,<span class="keyword">int</span> r1,<span class="keyword">int</span> l2,<span class="keyword">int</span> r2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(calc(l2,r2,l1,r1))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(calc(now,now,l1,r1))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(calc(l2,r2,now,now))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="built_in">memset</span>(sum,<span class="number">0</span>,<span class="keyword">sizeof</span>(sum));</span><br><span class="line">    <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">a[x][y]=<span class="number">1</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">sum[i][j]=sum[i<span class="number">-1</span>][j]+sum[i][j<span class="number">-1</span>]-sum[i<span class="number">-1</span>][j<span class="number">-1</span>]+a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) dp[i][i]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">1</span>;len&lt;=n;len++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> j=i+len;</span><br><span class="line"><span class="keyword">if</span>(j&gt;n) <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//其实这余下三坨是可以归在一起算的 </span></span><br><span class="line"><span class="keyword">if</span>(!calc(i,i,i+<span class="number">1</span>,j))dp[i][j]=(dp[i][j]+dp[i+<span class="number">1</span>][j])%mod;<span class="comment">//如果没有限制 </span></span><br><span class="line">        <span class="keyword">if</span>(!calc(i+<span class="number">1</span>,j,i,i))dp[i][j]=(dp[i][j]+dp[i+<span class="number">1</span>][j])%mod;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=i+<span class="number">1</span>;k&lt;j;k++)&#123;</span><br><span class="line"><span class="keyword">if</span>(check(i,i+<span class="number">1</span>,k,k+<span class="number">1</span>,j)) dp[i][j]=(dp[i][j]+dp[i+<span class="number">1</span>][k]*dp[k+<span class="number">1</span>][j])%mod;</span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dp[<span class="number">1</span>][n]);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;既然是萌萌哒 visit_world 的比赛，那必然会有一道计数题啦
      
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="dp" scheme="www.degage.xyz/tags/dp/"/>
    
      <category term="二维前缀和" scheme="www.degage.xyz/tags/%E4%BA%8C%E7%BB%B4%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
  </entry>
  
  <entry>
    <title>购物</title>
    <link href="www.degage.xyz/2018/11/07/53/"/>
    <id>www.degage.xyz/2018/11/07/53/</id>
    <published>2018-11-07T13:04:04.000Z</published>
    <updated>2019-01-16T13:28:41.834Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>visit_world 有一个商店，商店里卖 个商品，第 i 个的价格为$a_i$<br>我们称一个正整数 K 是美妙的，当且仅当我们可以在商店里选购若干个商品，使得价格之和落在区间$ [K, 2K]$ 中。<br>问：有多少个美妙的数。</p><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><p>$N&lt;=10^5,a_i&lt;=10^9$<br>时空限制：1s / 512MB</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>3<br>1 2 3</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>6</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>我们将$a_i$从小到大排序，对于前i个，假设它们和为sum,那么k能去到的范围即为$[\frac{sum+1}{2},sum]$，那么对于$\frac{sum-1}{2}$开始是覆盖的不到，我们便会减去一些来使覆盖，所以肯定是逐渐拿小的来，到最后剩下$a_i$，那么设前i-1个的和为sum’，则$[sum’+1,\frac{a_i-1}{2}]$是覆盖不到，所以最终把这些空隙减掉即可。</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll a[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">ll sum=<span class="number">0</span>,del=<span class="number">0</span>;</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">del+=max((a[i]+<span class="number">1</span>)/<span class="number">2</span>-sum<span class="number">-1</span>,<span class="number">0l</span>l);</span><br><span class="line">sum+=a[i]; </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,sum-del);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;visit_world 有一个商店，商店里卖 个商品，第 i 个的价
      
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="数学" scheme="www.degage.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>physics</title>
    <link href="www.degage.xyz/2018/11/06/52/"/>
    <id>www.degage.xyz/2018/11/06/52/</id>
    <published>2018-11-06T11:34:13.000Z</published>
    <updated>2019-01-16T13:28:38.238Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>一个n行m列的矩阵，每个为0或1，如果一个边长为K的正方形包含的所有数都为1，那么会形成一个强度为K的电场，有q次询问，每次询问会把1个1变做0，求每次询问的最大电场强度值。</p><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><p>$n,m&lt;=2 \ast 10^3 ,1&lt;=q&lt;=10^4$</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>5 5 5<br>+-+++<br>+++++<br>+++++<br>+++++<br>++++-<br>1 5<br>2 2<br>5 3<br>2 3<br>1 1</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>4<br>3<br>3<br>2<br>2</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先会想到用单调栈$n^2$计算最大1正方形，然后发现每改一个只会影响一列的up数组，然后发现如果答案递减不好维护，那么正难则反，我们先将所有的改动加进来，然后倒序考虑所有操作。<br>那么答案是会依次递增的，我们维护一个up和一个down数组来记录每个格子向上和向下最多多少格，对于每次询问，O(N)更新那一列的up和down，再O(n)单调队列扫一遍那一行，类似滑动窗口的来查询长度为k的序列的$min(up_i)和min(down_i)$，看它们加起来是否大于等于k，如果满足继续扩大k，否则标记答案。</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 2005 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxq 10005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y,ans;</span><br><span class="line">&#125;nd[maxq];</span><br><span class="line"><span class="keyword">int</span> n,m,a[maxn][maxn],q,st[maxn],top=<span class="number">0</span>,up[maxn][maxn],down[maxn][maxn];</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"><span class="keyword">int</span> maxx=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) up[i][j]=(a[i][j]==<span class="number">0</span>?<span class="number">0</span>:up[i<span class="number">-1</span>][j]+<span class="number">1</span>); </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--) down[i][j]=(a[i][j]==<span class="number">0</span>?<span class="number">0</span>:down[i+<span class="number">1</span>][j]+<span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    st[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">    top=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">    <span class="keyword">while</span>(top&amp;&amp;up[i][j]&lt;=up[i][st[top]])&#123;<span class="comment">//单调栈 </span></span><br><span class="line">    maxx=max(maxx,min(up[i][st[top]],j<span class="number">-1</span>-st[top<span class="number">-1</span>]));</span><br><span class="line">    top--;</span><br><span class="line">&#125;</span><br><span class="line">st[++top]=j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(top)&#123;</span><br><span class="line">maxx=max(maxx,min(up[i][st[top]],m-st[top<span class="number">-1</span>]));</span><br><span class="line">    top--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calcc</span><span class="params">(<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) up[i][j]=(a[i][j]==<span class="number">0</span>?<span class="number">0</span>:up[i<span class="number">-1</span>][j]+<span class="number">1</span>); </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--) down[i][j]=(a[i][j]==<span class="number">0</span>?<span class="number">0</span>:down[i+<span class="number">1</span>][j]+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> q1[maxn],q2[maxn],front1,front2,rear1,rear2;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(len&gt;min(n,m)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">front1=front2=rear1=rear2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="keyword">while</span>(front1&lt;rear1&amp;&amp;j-q1[front1]&gt;=len)front1++;</span><br><span class="line"><span class="keyword">while</span>(front1&lt;rear1&amp;&amp;up[i][q1[rear1<span class="number">-1</span>]]&gt;=up[i][j])rear1--;</span><br><span class="line">q1[rear1++]=j;</span><br><span class="line"><span class="keyword">while</span>(front2&lt;rear2&amp;&amp;j-q2[front2]&gt;=len)front2++;</span><br><span class="line"><span class="keyword">while</span>(front2&lt;rear2&amp;&amp;down[i][q2[rear2<span class="number">-1</span>]]&gt;=down[i][j])rear2--;</span><br><span class="line">q2[rear2++]=j;</span><br><span class="line"><span class="keyword">if</span>(j&gt;=len&amp;&amp;up[i][q1[front1]]+down[i][q2[front2]]<span class="number">-1</span>&gt;=len)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;m,&amp;q);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++) a[i][j]=(s[j]==<span class="string">'+'</span>?<span class="number">1</span>:<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;nd[i].x,&amp;nd[i].y);a[nd[i].x][nd[i].y]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">calc();</span><br><span class="line">nd[q].ans=maxx;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=q;i&gt;=<span class="number">2</span>;i--)&#123;</span><br><span class="line">a[nd[i].x][nd[i].y]=<span class="number">1</span>;</span><br><span class="line">calcc(nd[i].y);<span class="comment">//更新 </span></span><br><span class="line">nd[i<span class="number">-1</span>].ans=nd[i].ans;</span><br><span class="line"><span class="keyword">while</span>(check(nd[i].x,maxx+<span class="number">1</span>)) maxx++,nd[i<span class="number">-1</span>].ans=maxx;<span class="comment">//只改动了这一行 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,nd[i].ans); </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;一个n行m列的矩阵，每个为0或1，如果一个边长为K的正方形包含的所有
      
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="正难则反" scheme="www.degage.xyz/tags/%E6%AD%A3%E9%9A%BE%E5%88%99%E5%8F%8D/"/>
    
      <category term="单调队列" scheme="www.degage.xyz/tags/%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/"/>
    
      <category term="单调栈" scheme="www.degage.xyz/tags/%E5%8D%95%E8%B0%83%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>Chinese</title>
    <link href="www.degage.xyz/2018/11/06/51/"/>
    <id>www.degage.xyz/2018/11/06/51/</id>
    <published>2018-11-06T11:34:05.000Z</published>
    <updated>2019-01-16T13:28:34.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>一个n行m列的矩阵，每个格子可以填一个$1~k$的整数，矩阵中的一个格子为炼字当且仅当其值比其所在行和列的其它数都大，定义一个矩阵的精彩度为炼字的个数。设$f_i$为精彩度为i的方案数，显然:$\sum_{i=0}^{n \ast m} f_i=k^{n \ast m}$。现在你需要求出$\sum_{i=0}^{n \ast m} f_i \ast i mod (1e9+7)$</p><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><p>$n,m&lt;=10^9,k&lt;=10^6$</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>2 2 2</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>8</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先，对$\sum_{i=0}^{n \ast m} f_i \ast i$的理解为所有方案中炼字的个数和，那么考虑对每个格子单独计算贡献，如图：<br><img src="https://i.loli.net/2018/11/06/5be18a56030c0.jpg" alt=""><br>那么每个格子产生的贡献即为</p><script type="math/tex; mode=display">\sum_{i=1}^{k} k^{(n-1) \ast (m-1)} \ast (i-1)^{n-1} \ast (i-1)^{m-1}</script><p>因为相应性质，我们只要再乘上$n \ast m$即为最终答案。</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">ll n,m,k;</span><br><span class="line"><span class="function">ll <span class="title">qkpow</span><span class="params">(ll t,ll pos)</span></span>&#123;</span><br><span class="line">ll ans=<span class="number">1</span>,base=t;</span><br><span class="line"><span class="keyword">while</span>(pos)&#123;</span><br><span class="line"><span class="keyword">if</span>(pos&amp;<span class="number">1</span>) ans=ans*base%mod;</span><br><span class="line">base=base*base%mod;</span><br><span class="line">pos&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">ll t1=qkpow(k,(n<span class="number">-1</span>)*(m<span class="number">-1</span>)); </span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;k;i++) ans=(ans+qkpow(i,n<span class="number">-1</span>)*qkpow(i,m<span class="number">-1</span>)%mod*t1%mod)%mod;</span><br><span class="line">ans=ans*n%mod*m%mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;一个n行m列的矩阵，每个格子可以填一个$1~k$的整数，矩阵中的一个
      
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="数学" scheme="www.degage.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Certificate</title>
    <link href="www.degage.xyz/2018/11/05/50/"/>
    <id>www.degage.xyz/2018/11/05/50/</id>
    <published>2018-11-05T09:33:25.000Z</published>
    <updated>2019-01-16T13:28:28.198Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>已知有$N(N≤14)$个变量，变量取值0或1。<br>已知$f(0,0,⋯,0)，⋯，f(1,1,⋯,1)$的函数值。<br>对于每种输入$x=(x_0,x_1,⋯,x_n)$，求最少需要知道几个变量的值即可确定函数值。<br>举个例子：假设有两个变量，函数$f(a,b)=a\&amp;b$，那么对于$f(x)=0$，我们只要知道其中一个变量为0即可确定函数值为0，否则我们需要知道两个变量是否都为1，才能确定函数值为1。</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>可以先$2^N$枚举选出的t个关键问题，再$2^N$判断，复杂度为$4^N$，可以勉强卡过。</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 16</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">1</span>&lt;&lt;maxn],check[<span class="number">1</span>&lt;&lt;maxn],n,a[<span class="number">1</span>&lt;&lt;maxn];</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">1</span>&lt;&lt;maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(x)&#123;</span><br><span class="line">cnt++;</span><br><span class="line">x-=x&amp;(-x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> all=<span class="number">1</span>&lt;&lt;n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,s);</span><br><span class="line"><span class="built_in">memset</span>(ans,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(ans));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;s[i];i++) a[i]=(s[i]==<span class="string">'0'</span>?<span class="number">0</span>:<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;all;i++)&#123;</span><br><span class="line">    <span class="built_in">memset</span>(check,<span class="number">-1</span>,<span class="keyword">sizeof</span>(check));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;all;j++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(check[i&amp;j]==<span class="number">-1</span>) check[i&amp;j]=a[j];</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(check[i&amp;j]!=a[j]) check[i&amp;j]=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> len=calc(i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;all;j++) <span class="keyword">if</span>(check[i&amp;j]==a[j]) ans[j]=min(ans[j],len);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;all;i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>,ans[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;已知有$N(N≤14)$个变量，变量取值0或1。&lt;br&gt;已知$f(0
      
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="枚举" scheme="www.degage.xyz/tags/%E6%9E%9A%E4%B8%BE/"/>
    
  </entry>
  
  <entry>
    <title>树的距离</title>
    <link href="www.degage.xyz/2018/11/03/48/"/>
    <id>www.degage.xyz/2018/11/03/48/</id>
    <published>2018-11-03T02:25:50.000Z</published>
    <updated>2019-01-16T13:28:24.525Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>开始有一个空的集合S，进行Q次操作：</p><p>1.插入一个数x（如果已存在就忽略）<br>2.删除一个数x（如果不存在就忽略）<br>3.询问点集中数与x的最短距离<br>定义两个数a,b的距离为，每次将a乘一个质数或除以一个质数因子，使a变成b的最小步数。$（Q≤50000,x≤1000000，时限2秒）$</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>对于两个数A,B:</p><script type="math/tex; mode=display">A=p_1^{a_1}+p_2^{a_2}+.....p_n^{a_n}</script><script type="math/tex; mode=display">B=p_1^{b_1}+p_2^{b_2}+.....p_n^{b_n}</script><p>(如果某些$p_i$，相应的次数为0)<br>那么A,B的距离即为</p><script type="math/tex; mode=display">\sum_{i=1}^n abs(a_i-b_i)</script><p>设gcd(A,B)为g，那么dis可以化为$num(\frac a{g})+num(\frac b{g})$，其中num(x)表示x包含的质数个数。<br>然后我们发现枚举B的话复杂度无法承受，那么转过来枚举A的因数来作为GCD，然后统计相应步数即可。当然这里可以用set或map来维护以谁为gcd的最小B.</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1000005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> prime[maxn&gt;&gt;<span class="number">1</span>],top=<span class="number">0</span>,s[maxn];</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ready</span><span class="params">()</span></span>&#123;</span><br><span class="line">vis[<span class="number">0</span>]=vis[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=maxn<span class="number">-5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[i]) prime[++top]=i,s[i]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=top&amp;&amp;i*prime[j]&lt;=maxn<span class="number">-5</span>;j++)&#123;</span><br><span class="line">vis[prime[j]*i]=<span class="number">1</span>;s[prime[j]*i]=s[i]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>) <span class="keyword">break</span>; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> q,op,x;</span><br><span class="line"><span class="keyword">int</span> c[maxn][<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;op,&amp;x);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">1</span>&amp;&amp;!vis[x])&#123;</span><br><span class="line">vis[x]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;<span class="number">1l</span>l*j*j&lt;=x;j++) <span class="keyword">if</span>(x%j==<span class="number">0</span>)&#123; </span><br><span class="line">    c[j][s[x]-s[j]]++;</span><br><span class="line">    c[x/j][s[j]]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">2</span>&amp;&amp;vis[x])&#123;</span><br><span class="line">vis[x]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;<span class="number">1l</span>l*j*j&lt;=x;j++) <span class="keyword">if</span>(x%j==<span class="number">0</span>)&#123;</span><br><span class="line">c[j][s[x]-s[j]]--;</span><br><span class="line">c[x/j][s[j]]--;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">3</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;<span class="number">1l</span>l*j*j&lt;=x;j++) <span class="keyword">if</span>(x%j==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">20</span>;k++) <span class="keyword">if</span>(c[j][k]) ans=min(ans,k+s[x]-s[j]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">20</span>;k++) <span class="keyword">if</span>(c[x/j][k]) ans=min(ans,k+s[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ans==<span class="number">1e9</span>) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">ready();</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>滔滔的map代码：<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;map&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cmath&gt;</span></span><br><span class="line"><span class="comment">#include&lt;vector&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstdio&gt;</span></span><br><span class="line"><span class="comment">#include&lt;cstring&gt;</span></span><br><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">const int maxn=<span class="number">1000000</span>+<span class="number">5</span>,inf=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line">int n,f[maxn];</span><br><span class="line">bool vis[maxn];</span><br><span class="line">vector&lt;int&gt;primes;</span><br><span class="line">map&lt;int,int&gt;mp[maxn];</span><br><span class="line">void init()&#123;</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">2</span>;i&lt;=maxn-<span class="number">5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(!f[i])f[i]=<span class="number">1</span>,primes.push_back(i);</span><br><span class="line"><span class="keyword">for</span>(int k=<span class="number">0</span>;k&lt;primes.size()&amp;&amp;i*primes[k]&lt;=maxn-<span class="number">5</span>;k++)&#123;</span><br><span class="line">f[i*primes[k]]=f[i]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i%primes[k]==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void ins(int x)&#123;</span><br><span class="line"><span class="keyword">if</span>(vis[x])<span class="keyword">return</span>;vis[x]=<span class="number">1</span>;</span><br><span class="line">int sq=sqrt(x+<span class="number">0</span>.<span class="number">5</span>);</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">1</span>;i&lt;=sq;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>)mp[i][f[x]]++;</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>&amp;&amp;i*i!=x)mp[x/i][f[x]]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void del(int x)&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[x])<span class="keyword">return</span>;vis[x]=<span class="number">0</span>;</span><br><span class="line">int sq=sqrt(x+<span class="number">0</span>.<span class="number">5</span>);</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">1</span>;i&lt;=sq;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>)<span class="keyword">if</span>(--mp[i][f[x]]==<span class="number">0</span>)mp[i].erase(f[x]);</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>&amp;&amp;i*i!=x)<span class="keyword">if</span>(--mp[x/i][f[x]]==<span class="number">0</span>)mp[x/i].erase(f[x]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">int Find(int i)&#123;</span><br><span class="line"><span class="keyword">if</span>(!mp[i].size())<span class="keyword">return</span> inf*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> mp[i].<span class="keyword">begin</span>()-&gt;first;</span><br><span class="line">&#125;</span><br><span class="line">void solve(int x)&#123;</span><br><span class="line">int sq=sqrt(x+<span class="number">0</span>.<span class="number">5</span>),ans=inf;</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">1</span>;i&lt;=sq;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>)ans=min(ans,f[x]+Find(i)-<span class="number">2</span>*f[i]);</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>&amp;&amp;i*i!=x)ans=min(ans,f[x]+Find(x/i)-<span class="number">2</span>*f[x/i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ans&gt;=inf)printf(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">else</span> printf(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">init();</span><br><span class="line">scanf(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(int i=<span class="number">1</span>,op,x;i&lt;=n;i++)&#123;</span><br><span class="line">scanf(<span class="string">"%d%d"</span>,&amp;op,&amp;x);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">1</span>)ins(x);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">2</span>)del(x);</span><br><span class="line"><span class="keyword">if</span>(op==<span class="number">3</span>)solve(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;开始有一个空的集合S，进行Q次操作：&lt;/p&gt;
&lt;p&gt;1.插入一个数x
      
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="数学" scheme="www.degage.xyz/tags/%E6%95%B0%E5%AD%A6/"/>
    
      <category term="枚举" scheme="www.degage.xyz/tags/%E6%9E%9A%E4%B8%BE/"/>
    
      <category term="map" scheme="www.degage.xyz/tags/map/"/>
    
  </entry>
  
  <entry>
    <title>小G的树</title>
    <link href="www.degage.xyz/2018/11/03/47/"/>
    <id>www.degage.xyz/2018/11/03/47/</id>
    <published>2018-11-03T02:25:42.000Z</published>
    <updated>2019-01-16T13:28:19.957Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>给出n个点的树，每条边长会等概率是1或2，求树的直径的期望。（$n≤60$）</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>只要会树型dp求树的直径，然后枚举就可以$O(n^4)$过了</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 70</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll g[maxn&lt;&lt;<span class="number">1</span>][maxn&lt;&lt;<span class="number">1</span>],ff[maxn][maxn&lt;&lt;<span class="number">1</span>][maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> n,x,y;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">eage</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> to,next;</span><br><span class="line">&#125;e[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> np=<span class="number">0</span>,first[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">e[++np]=(eage)&#123;v,first[u]&#125;;</span><br><span class="line">first[u]=np;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sz[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> f)</span></span>&#123;</span><br><span class="line">     ff[i][<span class="number">0</span>][<span class="number">0</span>]=sz[i]=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> p=first[i];p;p=e[p].next)&#123;</span><br><span class="line"> <span class="keyword">int</span> j=e[p].to;</span><br><span class="line"> <span class="keyword">if</span>(j==f) <span class="keyword">continue</span>;</span><br><span class="line"> dfs(j,i);</span><br><span class="line"> <span class="built_in">memset</span>(g,<span class="number">0</span>,<span class="keyword">sizeof</span>(g));</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> l1=<span class="number">0</span>;l1&lt;=sz[i]*<span class="number">2</span>;l1++)</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> z1=l1;z1&lt;=sz[i]*<span class="number">2</span>;z1++)<span class="keyword">if</span>(ff[i][l1][z1])</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> l2=<span class="number">0</span>;l2&lt;=sz[j]*<span class="number">2</span>;l2++)</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> z2=l2;z2&lt;=sz[j]*<span class="number">2</span>;z2++) <span class="keyword">if</span>(ff[j][l2][z2])&#123;</span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">1</span>;len&lt;=<span class="number">2</span>;len++)&#123;</span><br><span class="line">     <span class="keyword">int</span> t=max(z1,z2);</span><br><span class="line">     t=max(t,l1+l2+len);</span><br><span class="line"> g[max(l1,l2+len)][t]+=ff[i][l1][z1]*ff[j][l2][z2];;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sz[i]+=sz[j];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;=sz[i]*<span class="number">2</span>;l++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> z=l;z&lt;=sz[i]*<span class="number">2</span>;z++)</span><br><span class="line">ff[i][l][z]=g[l][z];</span><br><span class="line"> &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);add(x,y);add(y,x);</span><br><span class="line">&#125; </span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">double</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;=n*<span class="number">2</span>;l++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> z=l;z&lt;=n*<span class="number">2</span>;z++)&#123;</span><br><span class="line">ans+=ff[<span class="number">1</span>][l][z]*z;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lf"</span>,ans/(<span class="number">1l</span>l&lt;&lt;(n<span class="number">-1</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;给出n个点的树，每条边长会等概率是1或2，求树的直径的期望。（$n≤
      
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="概率期望" scheme="www.degage.xyz/tags/%E6%A6%82%E7%8E%87%E6%9C%9F%E6%9C%9B/"/>
    
      <category term="树型dp" scheme="www.degage.xyz/tags/%E6%A0%91%E5%9E%8Bdp/"/>
    
  </entry>
  
  <entry>
    <title>郁闷的小G</title>
    <link href="www.degage.xyz/2018/11/03/46/"/>
    <id>www.degage.xyz/2018/11/03/46/</id>
    <published>2018-11-03T02:25:35.000Z</published>
    <updated>2019-01-16T13:28:16.474Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>有5种类型的题E,EM,M,MH,H若干，其中E,EM可用来出第一题，EM,M,MH可用来出第二题，MH,H可用来出第三题，求最多可出多少场模拟赛。（设N为最大数，$1≤N≤10^18$）</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>我干考试时懵了直接上了个大模拟，结果用二分简单到爆炸！！！</p><p>模拟：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll e,em,m,mh,h,a,b,c,x=<span class="number">1</span>,y=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld%lld"</span>,&amp;e,&amp;em,&amp;m,&amp;mh,&amp;h);</span><br><span class="line"> a=e+em,b=m,c=mh+h;</span><br><span class="line"> <span class="keyword">if</span>(a&lt;=b) x=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">if</span>(c&lt;=b) y=<span class="number">0</span>;</span><br><span class="line"> <span class="keyword">if</span>(!x&amp;&amp;!y)&#123;</span><br><span class="line"> ll ans=min(a,min(b,c));</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span>(!x)&#123;</span><br><span class="line"> ll mid=(b+c)/<span class="number">2</span>;</span><br><span class="line"> <span class="keyword">if</span>(mid-b&lt;=mh) y=mid-b;</span><br><span class="line"> <span class="keyword">else</span> y=mh;</span><br><span class="line"> ll minn=y+b;</span><br><span class="line"> ll ans=min(a,minn);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span>(!y)&#123;</span><br><span class="line"> ll mid=(a+b)/<span class="number">2</span>;</span><br><span class="line"> <span class="keyword">if</span>(mid-b&lt;=em) x=mid-b;</span><br><span class="line"> <span class="keyword">else</span> x=em;</span><br><span class="line"> ll minn=b+x;</span><br><span class="line"> ll ans=min(minn,c);</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(a&gt;c)&#123;</span><br><span class="line"> ll mv=a-c;</span><br><span class="line"> <span class="keyword">if</span>(mv&gt;em) mv=em;</span><br><span class="line">a=a-mv; </span><br><span class="line"> <span class="keyword">if</span>(b+mv&gt;=c)&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%lld"</span>,c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(mv==em)&#123;</span><br><span class="line">b+=mv;</span><br><span class="line">ll mid=(b+c)/<span class="number">2</span>;</span><br><span class="line">             <span class="keyword">if</span>(mid-b&lt;=mh) y=mid-b;</span><br><span class="line">             <span class="keyword">else</span> y=mh;</span><br><span class="line">             ll minn=y+b;</span><br><span class="line">             <span class="built_in">printf</span>(<span class="string">"%lld"</span>,minn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">b+=mv;</span><br><span class="line">em-=mv;<span class="comment">//还剩的步数 </span></span><br><span class="line">ll mvv=min(em,mh);</span><br><span class="line">ll cnt=(c-b)/<span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(cnt&gt;mvv) cnt=mvv;</span><br><span class="line">ll minn=b+cnt*<span class="number">2</span>;</span><br><span class="line">c=c-cnt,a=a-cnt;em-=mvv;mh-=mvv;</span><br><span class="line"><span class="keyword">if</span>(minn&lt;c)&#123;</span><br><span class="line">   <span class="keyword">if</span>(em)&#123;</span><br><span class="line">   ll mid=(minn+c)/<span class="number">2</span>;</span><br><span class="line">                 <span class="keyword">if</span>(mid-minn&lt;=em) y=mid-minn;</span><br><span class="line">                 <span class="keyword">else</span> y=em;</span><br><span class="line">                 minn=minn+y;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(mh)&#123;</span><br><span class="line">   ll mid=(minn+c)/<span class="number">2</span>;</span><br><span class="line">                 <span class="keyword">if</span>(mid-minn&lt;=mh) y=mid-minn;</span><br><span class="line">                 <span class="keyword">else</span> y=mh;</span><br><span class="line">                 minn=minn+y;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,minn);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span>&#123;</span><br><span class="line"> ll mv=c-a;</span><br><span class="line"> <span class="keyword">if</span>(mv&gt;mh) mv=mh;</span><br><span class="line">c=c-mv; </span><br><span class="line"> <span class="keyword">if</span>(b+mv&gt;=a)&#123;</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"%lld"</span>,a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(mv==mh)&#123;</span><br><span class="line">b+=mv;</span><br><span class="line">ll mid=(a+b)/<span class="number">2</span>;</span><br><span class="line">             <span class="keyword">if</span>(mid-b&lt;=em) x=mid-b;</span><br><span class="line">             <span class="keyword">else</span> x=em;</span><br><span class="line">             ll minn=b+x;</span><br><span class="line">             <span class="built_in">printf</span>(<span class="string">"%lld"</span>,minn);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">b+=mv;</span><br><span class="line">mh-=mv;<span class="comment">//还剩的步数 </span></span><br><span class="line">ll mvv=min(em,mh);</span><br><span class="line">ll cnt=(c-b)/<span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(cnt&gt;mvv) cnt=mvv;</span><br><span class="line">ll minn=b+cnt*<span class="number">2</span>;</span><br><span class="line">c=c-cnt,a=a-cnt;em-=mvv;mh-=mvv;</span><br><span class="line"><span class="keyword">if</span>(minn&lt;c)&#123;</span><br><span class="line">   <span class="keyword">if</span>(em)&#123;</span><br><span class="line">   ll mid=(minn+c)/<span class="number">2</span>;</span><br><span class="line">                 <span class="keyword">if</span>(mid-minn&lt;=em) y=mid-minn;</span><br><span class="line">                 <span class="keyword">else</span> y=em;</span><br><span class="line">                 minn=minn+y;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>(mh)&#123;</span><br><span class="line">   ll mid=(minn+c)/<span class="number">2</span>;</span><br><span class="line">                 <span class="keyword">if</span>(mid-minn&lt;=mh) y=mid-minn;</span><br><span class="line">                 <span class="keyword">else</span> y=mh;</span><br><span class="line">                 minn=minn+y;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,minn);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>滔滔的二分：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(LL mid,LL A,LL B,LL C,LL A_B,LL B_C)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(A&lt;mid)&#123;<span class="keyword">if</span>(A+A_B&lt;mid)<span class="keyword">return</span> <span class="literal">false</span>;A_B-=mid-A;&#125;B+=A_B;</span><br><span class="line"><span class="keyword">if</span>(B&lt;mid)&#123;<span class="keyword">if</span>(B+B_C&lt;mid)<span class="keyword">return</span> <span class="literal">false</span>;B_C-=mid-B;&#125;</span><br><span class="line">C+=B_C;<span class="keyword">if</span>(C&lt;mid)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">LL A,B,C,A_B,B_C;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld%lld"</span>,&amp;A,&amp;A_B,&amp;B,&amp;B_C,&amp;C);</span><br><span class="line">LL L=min(&#123;A,B,C&#125;),R=max(&#123;A+A_B,B+A_B+B_C,B_C+C&#125;),ans;</span><br><span class="line"><span class="keyword">while</span>(L&lt;=R)&#123;</span><br><span class="line">LL mid=(L+R)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(check(mid,A,B,C,A_B,B_C))ans=mid,L=mid+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> R=mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;有5种类型的题E,EM,M,MH,H若干，其中E,EM可用来出第一题
      
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="模拟" scheme="www.degage.xyz/tags/%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="二分" scheme="www.degage.xyz/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>取数游戏</title>
    <link href="www.degage.xyz/2018/11/01/45/"/>
    <id>www.degage.xyz/2018/11/01/45/</id>
    <published>2018-11-01T09:39:42.000Z</published>
    <updated>2019-01-16T13:28:12.709Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h1><p>有一个$N \ast M$的矩阵，你需要进行恰好K次操作，每次可以选择其中一行或者其中一列，将其中的元素全部累加到ans里去，然后把全中的这些数全部减去P，问ans最大是多少</p><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>2 2 2 2<br>1 3<br>2 4</p><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>11</p><h1 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h1><p>$N,M&lt;=1000,K&lt;=10^5,0&lt;=P&lt;=100,1&lt;A_{ij}&lt;1000$</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先探究性质发现取行或取列只分别对列和行整体造成影响，贪心还是要取大的，所以只考虑对自身的影响。再发现取行或取列都是分别对以后的取列或取行造成-p的影响，所以先后是没有关系的。<br>那么先预处理出去行k次和取列k次最大值，再O(n)枚举行列分别取多少，再减去$i \ast (k-i) \ast p$即可。</p><p>上代码：<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll h[maxn],l[maxn],sh[maxn],sl[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m,k,p,x;</span><br><span class="line">priority_queue&lt;ll&gt;q,qq;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;n,&amp;m,&amp;k,&amp;p);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">    h[i]+=x;l[j]+=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) q.push(h[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">ll t=q.top();q.pop();</span><br><span class="line">sh[i]=sh[i<span class="number">-1</span>]+t;t-=m*p;</span><br><span class="line">q.push(t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++) qq.push(l[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">ll t=qq.top();qq.pop();</span><br><span class="line">sl[i]=sl[i<span class="number">-1</span>]+t;t-=n*p;</span><br><span class="line">qq.push(t); </span><br><span class="line">&#125;</span><br><span class="line">ll ans=<span class="number">-1000000000000</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k;i++)&#123;</span><br><span class="line">  ans=max(ans,sh[i]+sl[k-i]<span class="number">-1l</span>l*i*(k-i)*p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    init();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h1&gt;&lt;p&gt;有一个$N \ast M$的矩阵，你需要进行恰好K次操作，每次可以选
      
    
    </summary>
    
      <category term="正睿" scheme="www.degage.xyz/categories/%E6%AD%A3%E7%9D%BF/"/>
    
    
      <category term="贪心" scheme="www.degage.xyz/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="优先队列" scheme="www.degage.xyz/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
</feed>
